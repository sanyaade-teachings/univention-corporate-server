#!/bin/bash
#
# Univention RunIt
#  delays execution for at least MIN_DELAY, but not longer than
#  MAX_DELAY. Also checks that it is not execute to fast after last
#  run. Waits at least 2 * delay.
#
# Copyright 2003-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

TIMEFILE=timefile
MIN_DELAY=5
MAX_DELAY=5

DELAY=${TIMEFILE}.delay

if [ -e ${TIMEFILE} ]; then
	touch ${DELAY}
	time_old=`stat -c"%X" ${TIMEFILE}`
	time_new=`stat -c"%X" ${DELAY}`
	time_diff=$((${time_new} - ${time_old}))
	read time_delay <${DELAY}

	time_delay=$((${time_delay:=${MIN_DELAY}} * 2))

	if [ ${time_diff} -gt ${time_delay} ]; then
		rm ${TIMEFILE}
		rm ${DELAY}
		time_delay=${MIN_DELAY}
	else
		if [ ${time_delay} -gt ${MAX_DELAY} ]; then
			time_delay=${MAX_DELAY}
		fi

		touch ${TIMEFILE}
		echo ${time_delay} >${DELAY}
	fi;

else
	touch ${TIMEFILE}
	time_delay=${MIN_DELAY}
fi

exec sleep ${time_delay}
