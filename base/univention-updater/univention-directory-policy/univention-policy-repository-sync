#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention Updater
#  read the repository settings
#
# Copyright 2004-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

from __future__ import print_function
import os
import sys
import subprocess
from univention.config_registry import ConfigRegistry

configRegistry = ConfigRegistry()
configRegistry.load()

# Name of the cron.d file
CRON_D = '/etc/cron.d/univention-repository-sync'

if os.path.exists(CRON_D):
    os.unlink(CRON_D)

ldap_hostdn = configRegistry.get('ldap/hostdn')
if ldap_hostdn:

    p1 = subprocess.Popen(['univention_policy_result', '-D', ldap_hostdn, '-y', '/etc/machine.secret', '-s', ldap_hostdn], stdout=subprocess.PIPE)
    result = p1.communicate()[0]

    if p1.returncode != 0:
        print('failed to execute univention_policy_result')
        sys.exit(result)

    for line in result.split('\n'):
        line = line.strip(' ').strip('\n').replace('"', '')
        if line.startswith('univentionRepositoryCron='):
            new_repository_sync = line.replace('univentionRepositoryCron=', '')
            if new_repository_sync:
                cron_file = open(CRON_D, 'w')
                cron_file.write('# cron job for syncing repository\n')
                if new_repository_sync != '* * * * * ':
                    cron_file.write('%s root /usr/sbin/univention-repository-update net\n' % new_repository_sync)
                cron_file.close()

sys.exit(0)
