#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention System Setup
#  software installation script
#
# Copyright 2004-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.
from univention.management.console.modules.setup.setup_script import AptScript, main, _
import univention.config_registry


class SoftwareScript(AptScript):
	name = _('Configuring software components')
	brutal_apt_options = False

	def up(self):
		super(SoftwareScript, self).up()

		# get this scripts configuration options
		self.packages_remove = self.profile.get_list('packages_remove')
		self.packages_install = self.profile.get_list('packages_install')

	def inner_run(self):
		if self.current_server_role == 'basesystem':
			# do not install anything on basesystem
			return True
		if not (self.packages_remove or self.packages_install):
			# nothing to do. don't autoremove either
			return True
		# +1 for update + 1 for autoremove
		ntasks = len(self.packages_remove) + len(self.packages_install) + 2
		self.steps(ntasks * 100)

		# apt-get update
		if self.update():
			self.finish_task('Update')
		else:
			return False
		self.base_package = self.get_package_for_role(self.current_server_role)
		if self.base_package is None:
			return False
		else:
			self.set_always_install(self.base_package)

		for pkg in self.packages_remove:
			# apt-get remove pkg
			self.uninstall(pkg)
			self.finish_task(pkg)

		# apt-get autoremove
		self.autoremove()
		self.finish_task('Autoremove')

		for pkg in self.packages_install:
			if pkg == 'univention-kde':
				ucr = univention.config_registry.ConfigRegistry()
				ucr.load()
				default_locale = ucr.get('locale/default')
				if default_locale and default_locale.startswith('de_'):
					self.install('firefox-esr-l10n-de')
			# apt-get install pkg
			self.install(pkg)
			self.finish_task(pkg)

		return True


if __name__ == '__main__':
	script = SoftwareScript()
	main(script)
