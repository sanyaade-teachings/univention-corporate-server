#!/usr/bin/python2.7 -B
# -*- coding: utf-8 -*-
"""
This script reads :file:`debian/*.univention-l10n` files inside the current working
directory and creates gettext Portable Objects defined within. It intends to
facilitate and homogenize the translation build process.

Add it to the build target inside :file:`debian/rules` to build the POs for a certain
language or use it manually inside source packages to update the translation
catalog.

Example :file:`debian/rules` override::

	override_dh_auto_build:
		univention-l10n-build fr
		dh_auto_build

"""
#
# Copyright 2017-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.
import argparse
import os

from univention import translationhelper as tlh


def parse_args():
	# type: () -> argparse.Namespace
	parser = argparse.ArgumentParser(description="Generate GNU gettext Portable Objects (PO files) from debian/*.univention-l10n files")
	parser.add_argument('language_code', help="ISO language code.")
	args = parser.parse_args()
	return args


def main():
	# type: () -> None
	args = parse_args()

	for scase in tlh.get_special_cases_from_srcpkg(os.getcwd(), args.language_code):
		pot_path = scase.create_po_template()
		if os.path.isfile(scase.new_po_path):
			tlh.message_catalogs.merge_po(pot_path, scase.new_po_path)
			os.unlink(pot_path)
		else:
			os.rename(pot_path, scase.new_po_path)
		tlh.message_catalogs.univention_location_lines(scase.new_po_path, scase.package_dir)
	for module_attrs in tlh.find_base_translation_modules(os.getcwd(), os.getcwd(), ".umc-modules"):
		module = tlh.UMCModuleTranslation.from_source_package(module_attrs, args.language_code)
		output_dir = os.getcwd()
		tlh.update_package_translation_files(module, output_dir)


if __name__ == '__main__':
	main()
