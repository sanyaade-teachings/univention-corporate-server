#!/bin/sh
# shellcheck disable=SC2016
set -e -u

exec >generated-config-doc.yml
cat "${0%/*}/base.yml"
cat "${0%/*}/base-doc.yml"

doc_job () { # <extends> [<suffix> [<language>]]
    echo
    echo "build ${pkg}${3:+ "$3"}${2:+ "$2"}:"
    echo '  variables:'
    echo "    DOCS_DIR: $path"
    echo "    DOC_NAME: ${path##*/}"
    if [ "${pkg}" = "changelog" ] || [ "${pkg}" = "release-notes" ]
    then
        echo '    DOC_TARGET_VERSION: $CHANGELOG_TARGET_VERSION'
    fi
    if [ "${pkg}" = "release-notes" ] && [ "${2}" = "html" ]
    then
        echo '    GIT_DEPTH: 0'
    fi
    [ -n "${3+empty}" ] && echo "    language: $3"
    echo "  extends: ${1:?extends}"
    echo '  rules:'
    echo '    - if: "$CI_COMMIT_MESSAGE =~ /skip-doc/ || $pipeline =~ /skip-doc/"'
    echo '      when: never'
    echo '    - if: "$CI_COMMIT_MESSAGE =~ /force-doc/ || $pipeline =~ /force-doc/"'
    echo '    - changes:'
    echo "      - ${path}/**/*"
}

document_paths () {
    for p in in doc/*/conf.py
    do
        [ -f "$p" ] || continue
        path="${p%/conf.py}"
        echo "      - $path/**/*"
    done
}

merge_one_artifact () {
    echo
    echo 'docs-merge-to-one-artifact:'
    echo '  extends: .sphinx-merge-template'
    echo '  rules:'
    echo '    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "webide"'
    echo '      changes:'
    document_paths
    echo '      when: manual'
    echo '    - changes:'
    document_paths
}

create_production_merge_request () {
    echo
    echo 'docs-create-production-merge-request:'
    echo '  extends: .sphinx-docs-merge-request-template'
    echo '  needs:'
    echo '    - job: docs-merge-to-one-artifact'
    echo '  rules:'
    echo '    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED || $CI_PIPELINE_SOURCE == "web" || $CI_PIPELINE_SOURCE == "webide"'
    echo '      changes:'
    document_paths
}

for make in doc/*/conf.py
do
    [ -f "$make" ] || continue
    path="${make%/conf.py}"
    pkg="${path##*/}"

        for l_path in "$path"/locales/* "en"
        do
            language="${l_path##*/}"
            [ "$language" = '*' ] && continue
            doc_job '.sphinx-html' html "$language"
            doc_job '.sphinx-pdf' pdf "$language"
            doc_job '.sphinx-linkcheck' linkcheck "$language"
            doc_job '.sphinx-spelling' spelling "$language"
            doc_job '.sphinx-warnings' warnings "$language"
        done
done
merge_one_artifact
create_production_merge_request
