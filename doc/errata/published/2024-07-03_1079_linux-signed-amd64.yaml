product: ucs
release: "5.0"
version: [7, 8]
scope: ucs_5.0-0-errata5.0-8
src: linux-signed-amd64
fix: 4.19.316+1
desc: |
 * CVE-2023-52449: mtd: Fix gluebi NULL pointer dereference caused by ftl
   notifier
 * CVE-2023-52444: f2fs: fix to avoid dirent corruption
 * CVE-2023-46838: Transmit requests in Xen's virtual network protocol can
   consist of multiple parts. While not really useful, except for the initial
   part any of them may be of zero length, i.e. carry no data at all. Besides
   a certain initial portion of the to be transferred data, these parts are
   directly translated into what Linux calls SKB fragments. Such converted
   request parts can, when for a particular SKB they are all of length zero,
   lead to a de-reference of NULL in core networking code.
 * CVE-2023-52443: apparmor: avoid crash when parsed profile name is empty
 * CVE-2024-26597: net: qualcomm: rmnet: fix global oob in `rmnet_policy`
 * CVE-2024-24861: A race condition was found in the Linux kernel's
   media/xc4000 device driver in `xc4000 xc4000_get_frequency()` function.
   This can result in return value overflow issue, possibly leading to
   malfunction or denial of service issue.
 * CVE-2023-6040: netfilter: nf_tables: out-of-bounds access in
   `nf_tables_newtable()`
 * CVE-2023-52340: ICMPv6 “Packet Too Big” packets force a DoS of the Linux
   kernel by forcing 100% CPU
 * CVE-2023-52436: f2fs: explicitly null-terminate the xattr list
 * CVE-2023-52439: uio: Fix use-after-free in uio_open
 * CVE-2023-52464: EDAC/thunderx: Incorrect buffer size in
   drivers/edac/thunderx_edac.c
 * CVE-2023-52693: ACPI: video: check for error while searching for backlight
   device parent
 * CVE-2023-52683: ACPI: LPIT: Avoid u32 multiplication overflow
 * CVE-2023-52698: calipso: fix memory leak in `netlbl_calipso_add_pass()`
 * CVE-2023-52612: crypto: scomp - fix `req->dst` buffer overflow
 * CVE-2024-26633: ip6_tunnel: fix NEXTHDR_FRAGMENT handling in
   `ip6_tnl_parse_tlv_enc_lim()`
 * CVE-2023-52445: pvrusb2: fix use after free on context disconnection
 * CVE-2023-52470: null-ptr-deref in `alloc_workqueue`
 * CVE-2023-52691: drm/amd/pm: fix a double-free in si_dpm_init
 * CVE-2023-52469: use-after-free in `kv_parse_power_table`
 * CVE-2023-52679: of: Fix double free in `of_parse_phandle_with_args_map`
 * CVE-2023-52609: binder: fix race between `mmput()` and `do_exit()`
 * CVE-2023-52615: hwrng: core - Fix page fault dead lock on mmap-ed hwrng
 * CVE-2023-52670: rpmsg: virtio: Free driver_override when `rpmsg_remove()`
 * CVE-2024-26615: net/smc: fix illegal rmb_desc access in SMC-D connection
   dump
 * CVE-2024-26636: llc: make `llc_ui_sendmsg()` more robust against bonding
   changes
 * CVE-2024-26635: llc: Drop support for ETH_P_TR_802_2.
 * CVE-2024-23849: off-by-one error for an RDS_MSG_RX_DGRAM_TRACE_MAX
   comparison, resulting in out-of-bounds access
 * CVE-2024-26645: tracing: Ensure visibility when inserting an element into
   tracing_map
 * CVE-2024-35835: net/mlx5e: fix a double-free in arfs_create_groups
 * CVE-2024-1086: nf_tables: use-after-free vulnerability in the
   `nft_verdict_init()` function
 * CVE-2023-52486: drm: Don't unref the same fb many times by mistake due to
   deadlock handling
 * CVE-2021-33630: net/sched: cbs NULL pointer dereference when offloading is
   enabled
 * CVE-2023-52604: FS:JFS:UBSAN:array-index-out-of-bounds in dbAdjTree
 * CVE-2023-52603: UBSAN: array-index-out-of-bounds in dtSplitRoot
 * CVE-2023-52602: jfs: fix slab-out-of-bounds Read in dtSearch
 * CVE-2023-52601: jfs: fix array-index-out-of-bounds in dbAdjTree
 * CVE-2023-52600: jfs: fix uaf in jfs_evict_inode
 * CVE-2023-52619: pstore/ram: Fix crash when setting number of cpus to an odd
   number
 * CVE-2023-52599: jfs: fix array-index-out-of-bounds in diNewExt
 * CVE-2023-52623: SUNRPC: Fix a suspicious RCU usage warning
 * CVE-2023-52622: ext4: avoid online resizing failures due to oversized flex
   bg
 * CVE-2023-52594: wifi: ath9k: Fix potential array-index-out-of-bounds read
   in `ath9k_htc_txstatus()`
 * CVE-2023-52587: IB/ipoib: Fix mcast list locking
 * CVE-2024-26671: blk-mq: fix IO hang from sbitmap wakeup race
 * CVE-2023-52583: ceph: fix deadlock or deadcode of misusing dget()
 * CVE-2024-26625: llc: call sock_orphan() at release time
 * CVE-2024-26600: phy: ti: phy-omap-usb2: Fix NULL pointer dereference for
   SRP
 * CVE-2024-26664: hwmon: (coretemp) Fix out-of-bounds memory access
 * CVE-2024-26679: inet: read sk->sk_family once in inet_recv_error()
 * CVE-2024-26663: tipc: Check the bearer type before calling
   tipc_udp_nl_bearer_add()
 * CVE-2024-26675: ppp_async: limit MRU to 64K
 * CVE-2024-0340: Information disclosure in vhost/vhost.c:vhost_new_msg()
 * CVE-2024-26722: ASoC: rt5645: Fix deadlock in rt5645_jack_detect_work()
 * CVE-2024-26720: mm/writeback: fix possible divide-by-zero in
   wb_dirty_limits(), again
 * CVE-2024-26917: scsi: Revert "scsi: fcoe: Fix potential deadlock on
   &fip->ctlr_lock"
 * CVE-2024-26825: nfc: nci: free rx_data_reassembly skb on NCI device cleanup
 * CVE-2024-26606: signal epoll threads of self-work
 * CVE-2024-26704: ext4: fix double-free of blocks due to wrong extents
   moved_len
 * CVE-2024-26697: nilfs2: fix data corruption in dsync block recovery for
   small block sizes
 * CVE-2024-26696: nilfs2: fix hang in nilfs_lookup_dirty_data_buffers()
 * CVE-2024-26602: sched/membarrier: reduce the ability to hammer on
   sys_membarrier
 * CVE-2024-26685: nilfs2: fix potential bug in end_buffer_async_write
 * CVE-2024-0607: nf_tables: pointer math issue in nft_byteorder_eval()
 * CVE-2024-26845: scsi: target: core: Add TMF to tmr_list handling
 * CVE-2024-26779: wifi: mac80211: fix race condition on enabling fast-xmit
 * CVE-2024-26778: fbdev: savage: Error out if pixclock equals zero
 * CVE-2024-26777: fbdev: sis: Error out if pixclock equals zero
 * CVE-2024-26773: ext4: avoid allocating blocks from corrupted group in
   ext4_mb_try_best_found()
 * CVE-2024-26772: ext4: avoid allocating blocks from corrupted group in
   ext4_mb_find_by_goal()
 * CVE-2024-26766: IB/hfi1: Fix sdma.h tx->num_descs off-by-one error
 * CVE-2024-26763: dm-crypt: don't modify the data when using authenticated
   encryption
 * CVE-2024-26754: gtp: fix use-after-free and null-ptr-deref in
   gtp_genl_dump_pdp()
 * CVE-2024-26752: l2tp: pass correct message length to ip6_append_data
 * CVE-2024-27405: usb: gadget: ncm: Avoid dropping datagrams of properly
   parsed NTBs
 * CVE-2024-26839: IB/hfi1: Fix a memleak in init_credit_return
 * CVE-2024-26744: RDMA/srpt: Support specifying the srpt_service_guid
   parameter
 * CVE-2024-26735: ipv6: sr: fix possible use-after-free and null-ptr-deref
 * CVE-2024-26764: fs/aio: Restrict kiocb_set_cancel_fn() to I/O submitted via
   libaio
 * CVE-2024-26805: netlink: Fix kernel-infoleak-after-free in
   __skb_datagram_iter
 * CVE-2024-26801: Bluetooth: Avoid potential use-after-free in
   hci_error_reset
 * CVE-2024-27416: Bluetooth: hci_event: Fix handling of
   HCI_EV_IO_CAPA_REQUEST
 * CVE-2024-27413: efi/capsule-loader: fix incorrect allocation size
 * CVE-2024-27412: power: supply: bq27xxx-i2c: Do not free non existing IRQ
 * CVE-2024-26793: gtp: fix use-after-free and null-ptr-deref in gtp_newlink()
 * CVE-2024-27410: wifi: nl80211: reject iftype change with mesh ID change
 * CVE-2024-26791: btrfs: dev-replace: properly validate device names
 * CVE-2024-26840: cachefiles: fix memory leak in cachefiles_add_cache()
 * CVE-2024-26857: geneve: make sure to pull inner header in geneve_rx()
 * CVE-2024-26852: net/ipv6: avoid possible UAF in ip6_route_mpath_notify()
 * CVE-2024-27024: net/rds: fix WARNING in rds_conn_connect_if_down
 * CVE-2024-26851: netfilter: nf_conntrack_h323: Add protection for bmp length
   out of range
 * CVE-2024-27419: netrom: Fix data-races around sysctl_net_busy_read
 * CVE-2024-26820: hv_netvsc: Register VF in netvsc_probe if
   NET_DEVICE_REGISTER missed
 * CVE-2024-22099: NULL Pointer dereference bluetooth allows Overflow Buffers
 * CVE-2024-26903: Bluetooth: rfcomm: Fix null-ptr-deref in
   rfcomm_check_security
 * CVE-2024-26901: do_sys_name_to_handle(): use kzalloc() to fix
   kernel-infoleak
 * CVE-2023-6270: AoE: improper reference count leads to use-after-free
   vulnerability
 * CVE-2023-7042: null pointer dereference in
   ath10k_wmi_tlv_op_pull_mgmt_tx_compl_ev()
 * CVE-2023-52644: wifi: b43: Stop/wake correct queue in DMA Tx path when QoS
   is disabled
 * CVE-2024-35828: wifi: libertas: fix some memleaks in
   lbs_allocate_cmd_buffer()
 * CVE-2024-26894: ACPI: processor_idle: Fix memory leak in
   acpi_processor_power_exit()
 * CVE-2024-26816: x86, relocs: Ignore relocations in .notes section
 * CVE-2024-27388: SUNRPC: fix some memleaks in gssx_dec_option_array
 * CVE-2024-26889: Bluetooth: hci_core: Fix possible buffer overflow
 * CVE-2024-26651: sr9800: Add check for usbnet_get_endpoints
 * CVE-2024-26884: bpf: Fix hashtab overflow check on 32-bit arches
 * CVE-2024-26883: bpf: Fix stackmap overflow check on 32-bit arches
 * CVE-2024-27046: nfp: flower: handle acti_netdevs allocation failure
 * CVE-2024-26880: dm: call the resume method on internal suspend
 * CVE-2023-52650: drm/tegra: dsi: Add missing check for
   of_find_device_by_node
 * CVE-2024-35830: media: tc358743: register v4l2 async device only after
   successful setup
 * CVE-2024-27078: media: v4l2-tpg: fix some memleaks in tpg_alloc
 * CVE-2024-27077: media: v4l2-mem2mem: fix a memleak in
   v4l2_m2m_register_entity
 * CVE-2024-27043: media: edia: dvbdev: fix a use-after-free
 * CVE-2024-26878: quota: Fix potential NULL pointer dereference
 * CVE-2024-26875: media: pvrusb2: fix uaf in pvr2_context_set_notify
 * CVE-2024-27075: media: dvb-frontends: avoid stack overflow warnings with
   clang
 * CVE-2024-27074: media: go7007: fix a memleak in go7007_load_encoder
 * CVE-2024-26874: drm/mediatek: Fix a null pointer crash in
   mtk_drm_crtc_finish_page_flip
 * CVE-2024-27436: ALSA: usb-audio: Stop parsing channels bits when all
   channels are found.
 * CVE-2024-26863: hsr: Fix uninit-value access in hsr_get_node()
 * CVE-2024-26859: net/bnx2x: Prevent access to a freed page in page_pool
 * CVE-2024-27028: spi: spi-mt65xx: Fix NULL pointer access in interrupt
   handler
 * CVE-2023-47233: Use after free in brcmf_cfg80211_escan_timeout_worker in
   drivers/net/wireless/broadcom/brcm80211/brcmfmac/cfg80211.c
 * CVE-2024-26976: KVM: Always flush async #PF workqueue when vCPU is being
   destroyed
 * CVE-2024-26974: crypto: qat - resolve race condition during AER recovery
 * CVE-2024-26973: fat: fix uninitialized field in nostale filehandles
 * CVE-2024-35821: ubifs: Set page uptodate in the correct place
 * CVE-2024-25739: crash due to a missing check for leb_size
 * CVE-2024-26969: clk: qcom: gcc-ipq8074: fix terminating of frequency table
   arrays
 * CVE-2024-26966: clk: qcom: mmcc-apq8084: fix terminating of frequency table
   arrays
 * CVE-2024-26965: clk: qcom: mmcc-msm8974: fix terminating of frequency table
   arrays
 * CVE-2024-35809: PCI/PM: Drain runtime-idle callbacks before driver removal
 * CVE-2024-35807: ext4: fix corruption during on-line resize
 * CVE-2024-35806: soc: fsl: qbman: Always disable interrupts when taking
   cgr_lock
 * CVE-2024-35819: soc: fsl: qbman: Use raw spinlock for cgr_lock
 * CVE-2024-26956: nilfs2: fix failure to detect DAT corruption in btree and
   direct mappings
 * CVE-2024-26955: nilfs2: prevent kernel bug at submit_bh_wbc()
 * CVE-2024-26642: netfilter: nf_tables: disallow anonymous set with timeout
   flag
 * CVE-2024-27059: USB: usb-storage: Prevent divide-by-0 error in
   isd200_ata_command
 * CVE-2024-35825: usb: gadget: ncm: Fix handling of zero block length packets
 * CVE-2024-35823: vt: fix unicode buffer corruption when deleting characters
 * CVE-2022-48627: vt: fix memory overlapping when deleting chars in the
   buffer
 * CVE-2024-35789: wifi: mac80211: check/clear fast rx for non-4addr sta VLAN
   changes
 * CVE-2024-35815: fs/aio: Check IOCB_AIO_RW before the struct aio_kiocb
   conversion
 * CVE-2024-35822: usb: udc: remove warning when queue disabled ep
 * CVE-2024-26931: scsi: qla2xxx: Fix command flush on cable pull
 * CVE-2024-26934: USB: core: Fix deadlock in usb_deauthorize_interface()
 * CVE-2024-35915: nfc: nci: Fix uninit-value in nci_dev_up and nci_ntf_packet
 * CVE-2024-35910: tcp: properly terminate timers for kernel sockets
 * CVE-2024-24857: net/bluetooth: race condition in
   conn_info_{min,max}_age_set()
 * CVE-2024-24858: net/bluetooth: race condition in
   {conn,adv}_{min,max}_interval_set() function
 * CVE-2023-52620: netfilter: nf_tables: disallow timeout for anonymous sets
 * CVE-2024-35902: net/rds: fix possible cp null dereference
 * CVE-2024-35898: netfilter: nf_tables: Fix potential data-race in
   __nft_flowtable_type_get()
 * CVE-2024-35893: net/sched: act_skbmod: prevent kernel-infoleak
 * CVE-2024-35886: ipv6: Fix infinite recursion in fib6_dump_done().
 * CVE-2024-36020: i40e: fix vf may be used uninitialized in this function
   warning
 * CVE-2024-35888: erspan: make sure erspan_base_hdr is present in skb->head
 * CVE-2024-35944: VMCI: Fix memcpy() run-time warning in
   dg_dispatch_as_host()
 * CVE-2024-35936: btrfs: handle chunk tree lookup error in
   btrfs_relocate_sys_chunks()
 * CVE-2024-35935: btrfs: send: handle path ref underflow in header
   iterate_inode_ref()
 * CVE-2024-35933: Bluetooth: btintel: Fix null ptr deref in
   btintel_read_version
 * CVE-2023-52699: sysv: don't call sb_bread() with pointers_lock held
 * CVE-2024-35930: scsi: lpfc: Fix possible memory leak in lpfc_rcv_padisc()
 * CVE-2024-35925: block: prevent division by zero in blk_rq_stat_sum()
 * CVE-2024-35922: fbmon: prevent division by zero in
   fb_videomode_from_videomode()
 * CVE-2023-52880: tty: n_gsm: require CAP_NET_ADMIN to attach N_GSM0710 ldisc
 * CVE-2024-35877: x86/mm/pat: fix VM_PAT handling in COW mappings
 * CVE-2024-26817: amdkfd: use calloc instead of kzalloc to avoid integer
   overflow
 * CVE-2024-35982: batman-adv: Avoid infinite loop trying to resize local TT
 * CVE-2024-35978: Bluetooth: Fix memory leak in hci_req_sync_complete()
 * CVE-2024-35973: geneve: fix header validation in geneve[6]_xmit_skb
 * CVE-2024-35969: ipv6: fix race condition between ipv6_get_ifaddr and
   ipv6_del_addr
 * CVE-2024-35960: net/mlx5: Properly link new fs rules into the tree
 * CVE-2024-35955: kprobes: Fix possible use-after-free issue on kprobe
   registration
 * CVE-2024-27020: netfilter: nf_tables: Fix potential data-race in
   __nft_expr_type_get()
 * CVE-2024-27013: tun: limit printing rate when illegal packet received by
   tun dev
 * CVE-2024-27008: drm: nv04: Fix out of bounds access
 * CVE-2024-27001: comedi: vmk80xx: fix incomplete endpoint checking
 * CVE-2024-26997: usb: dwc2: host: Fix dereference issue in DDMA completion
   flow.
 * CVE-2024-26994: speakup: Avoid crash on very long word
 * CVE-2024-26993: fs: sysfs: Fix reference leak in
   sysfs_break_active_protection()
 * CVE-2024-26984: nouveau: fix instmem race condition around ptr stores
 * CVE-2024-26981: nilfs2: fix OOB in nilfs_set_de_type
 * CVE-2024-27396: net: gtp: Fix Use-After-Free in gtp_dellink
 * CVE-2024-27395: net: openvswitch: Fix Use-After-Free in ovs_ct_exit
 * CVE-2024-36004: i40e: Do not use WQ_MEM_RECLAIM flag for workqueue
 * CVE-2024-26922: drm/amdgpu: validate the parameters of bo mapping
   operations more clearly
 * CVE-2024-35849: btrfs: fix information leak in btrfs_ioctl_logical_to_ino()
 * CVE-2024-35847: irqchip/gic-v3-its: Prevent double free on error
 * CVE-2024-35984: i2c: smbus: fix NULL function pointer dereference
 * CVE-2024-35997: HID: i2c-hid: remove I2C_HID_READ_PENDING flag to prevent
   lock-up
 * CVE-2024-36941: wifi: nl80211: don't free NULL coalescing rule
 * CVE-2024-36940: pinctrl: core: delete incorrect free in pinctrl_enable()
 * CVE-2024-36959: pinctrl: devicetree: fix refcount leak in
   pinctrl_dt_to_map()
 * CVE-2024-36934: bna: ensure the copied buf is NUL terminated
 * CVE-2024-36933: nsh: Restore skb->{protocol,data,mac_header} for outer
   header in nsh_gso_segment().
 * CVE-2024-36954: tipc: fix a possible memleak in tipc_buf_append
 * CVE-2024-36919: scsi: bnx2fc: Remove spin_lock_bh while releasing resources
   after upload
 * CVE-2024-36950: firewire: ohci: mask bus reset interrupts between ISR and
   bottom half
 * CVE-2024-36964: fs/9p: only translate RWX permissions for plain 9P2000
 * CVE-2024-36905: tcp: defer shutdown(SEND_SHUTDOWN) for TCP_SYN_RECV sockets
 * CVE-2024-36904: tcp: Use refcount_inc_not_zero() in tcp_twsk_unique().
 * CVE-2024-27398: Bluetooth: Fix use-after-free bugs caused by
   sco_sock_timeout
 * CVE-2024-27399: Bluetooth: l2cap: fix null-ptr-deref in l2cap_chan_timeout
 * CVE-2024-36017: rtnetlink: Correct nested IFLA_VF_VLAN_LIST attribute
   validation
 * CVE-2024-36946: phonet: fix rtm_phonet_notify() skb allocation
 * CVE-2024-36902: ipv6: fib6_rules: avoid possible NULL dereference in
   fib6_rule_action()
 * CVE-2024-26923: af_unix: Fix garbage collector racing against connect()
 * CVE-2024-27401: firewire: nosy: ensure user_length is taken into account
   when fetching packet contents
 * CVE-2024-36886: TIPC message reassembly use-after-free remote code
   execution vulnerability
 * CVE-2024-35947: dyndbg: fix old BUG_ON in >control parser
 * CVE-2024-36960: drm/vmwgfx: Fix invalid reads in fence signaled events
 * CVE-2024-36883: net: fix out-of-bounds access in ops_init
 * CVE-2023-52429: missing check for struct in dm-table.c can cause a crash
 * CVE-2024-38587: speakup: Fix sizeof() vs ARRAY_SIZE() bug
 * CVE-2024-38601: ring-buffer: Fix a race between readers and resize checks
 * CVE-2024-38582: nilfs2: fix potential hang in nilfs_detach_log_writer()
 * CVE-2024-36016: tty: n_gsm: fix possible out-of-bounds in gsm0_receive()
 * CVE-2024-38579: crypto: bcm - Fix pointer arithmetic
 * CVE-2024-38578: ecryptfs: Fix buffer size for tag 66 packet
 * CVE-2024-38599: jffs2: prevent xattr node from overflowing the eraseblock
 * CVE-2024-38598: md: fix resync softlockup when bitmap size is less than
   array size
 * CVE-2024-38567: wifi: carl9170: add a proper sanity check for endpoints
 * CVE-2024-38565: wifi: ar5523: enable proper endpoint verification
 * CVE-2024-38560: scsi: bfa: Ensure the copied buf is NUL terminated
 * CVE-2024-38559: scsi: qedf: Ensure the copied buf is NUL terminated
 * CVE-2024-38596: af_unix: Fix data races in
   unix_release_sock/unix_stream_sendmsg
 * CVE-2024-38558: net: openvswitch: fix overwriting ct original tuple for
   ICMPv6
 * CVE-2024-38612: ipv6: sr: fix invalid unregister error path
 * CVE-2024-38552: drm/amd/display: Fix potential index out of bounds in color
   transformation function
 * CVE-2024-38549: drm/mediatek: Add 0 size check to mtk_drm_gem_obj
 * CVE-2024-36014: drm/arm/malidp: fix a possible null pointer dereference
 * CVE-2024-38589: netrom: fix possible dead-lock in nr_rt_ioctl()
 * CVE-2024-38637: greybus: lights: check return of get_channel_from_mode
 * CVE-2024-38634: serial: max3100: Lock port->lock when calling
   uart_handle_cts_change()
 * CVE-2024-38633: serial: max3100: Update uart_driver_registered on driver
   removal
 * CVE-2024-38627: stm class: Fix a double free in stm_register_device()
 * CVE-2024-36015: ppdev: Add an error check in register_device
 * CVE-2024-39292: um: Add winch to winch_handlers before registering winch
   IRQ
 * CVE-2024-38621: media: stk1160: fix bounds checking in stk1160_copy_video()
 * CVE-2024-38381: nfc: nci: Fix uninit-value in nci_rx_work
 * CVE-2024-37356: tcp: Fix shift-out-of-bounds in dctcp_update_alpha().
 * CVE-2024-37353: virtio: delete vq in vp_find_vqs_msix() when request_irq()
   fails
 * CVE-2024-36286: netfilter: nfnetlink_queue: acquire rcu_read_lock() in
   instance_destroy_rcu()
 * CVE-2024-38780: dma-buf/sw-sync: don't enable IRQ from sync_print_obj()
 * CVE-2024-38659: enic: Validate length of nl attributes in enic_set_vf_port
 * CVE-2024-33621: ipvlan: Dont Use skb->sk in ipvlan_process_v{4,6}_outbound
 * CVE-2024-38618: ALSA: timer: Set lower bound of start tick time
 * CVE-2024-31076: genirq/cpuhotplug, x86/vector: Prevent vector leak during
   CPU offline
 * CVE-2024-36288: SUNRPC: Fix loop termination condition in
   gss_free_in_token_pages()
 * CVE-2024-38583: nilfs2: fix use-after-free of timer for log writer thread
 * CVE-2023-52628: netfilter: nftables: exthdr: fix 4-byte stack OOB write
 * CVE-2024-36971: net: fix __dst_negative_advice() race
 * CVE-2023-0386: FUSE filesystem low-privileged user privileges escalation
note: This is the 2nd of three parts.
bug: [57414]
cve:
- CVE-2023-6040
- CVE-2023-52340
- CVE-2023-52436
- CVE-2023-52439
- CVE-2023-52464
- CVE-2023-52693
- CVE-2023-52683
- CVE-2023-52698
- CVE-2023-52449
- CVE-2023-52612
- CVE-2024-26633
- CVE-2023-52445
- CVE-2023-52444
- CVE-2023-52470
- CVE-2023-52691
- CVE-2023-52469
- CVE-2023-52679
- CVE-2023-46838
- CVE-2023-52609
- CVE-2023-52443
- CVE-2024-26597
- CVE-2023-52615
- CVE-2023-52670
- CVE-2024-26615
- CVE-2024-26636
- CVE-2024-26635
- CVE-2024-23849
- CVE-2024-26645
- CVE-2024-35835
- CVE-2024-1086
- CVE-2023-52486
- CVE-2021-33630
- CVE-2023-52604
- CVE-2023-52603
- CVE-2023-52602
- CVE-2023-52601
- CVE-2023-52600
- CVE-2023-52619
- CVE-2023-52599
- CVE-2023-52623
- CVE-2023-52622
- CVE-2023-52594
- CVE-2023-52587
- CVE-2024-26671
- CVE-2023-52583
- CVE-2024-26625
- CVE-2024-26600
- CVE-2024-26664
- CVE-2024-26679
- CVE-2024-26663
- CVE-2024-26675
- CVE-2024-0340
- CVE-2024-26722
- CVE-2024-26720
- CVE-2024-26917
- CVE-2024-26825
- CVE-2024-26606
- CVE-2024-26704
- CVE-2024-26697
- CVE-2024-26696
- CVE-2024-26602
- CVE-2024-26685
- CVE-2024-0607
- CVE-2024-26845
- CVE-2024-26779
- CVE-2024-26778
- CVE-2024-26777
- CVE-2024-26773
- CVE-2024-26772
- CVE-2024-26766
- CVE-2024-26763
- CVE-2024-26754
- CVE-2024-26752
- CVE-2024-27405
- CVE-2024-26839
- CVE-2024-26744
- CVE-2024-26735
- CVE-2024-26764
- CVE-2024-26805
- CVE-2024-26801
- CVE-2024-27416
- CVE-2024-27413
- CVE-2024-27412
- CVE-2024-26793
- CVE-2024-27410
- CVE-2024-26791
- CVE-2024-26840
- CVE-2024-26857
- CVE-2024-26852
- CVE-2024-27024
- CVE-2024-26851
- CVE-2024-27419
- CVE-2024-26820
- CVE-2024-22099
- CVE-2024-26903
- CVE-2024-26901
- CVE-2023-6270
- CVE-2023-7042
- CVE-2023-52644
- CVE-2024-35828
- CVE-2024-26894
- CVE-2024-26816
- CVE-2024-27388
- CVE-2024-26889
- CVE-2024-26651
- CVE-2024-26884
- CVE-2024-26883
- CVE-2024-27046
- CVE-2024-26880
- CVE-2023-52650
- CVE-2024-35830
- CVE-2024-27078
- CVE-2024-27077
- CVE-2024-27043
- CVE-2024-26878
- CVE-2024-26875
- CVE-2024-27075
- CVE-2024-27074
- CVE-2024-26874
- CVE-2024-27436
- CVE-2024-26863
- CVE-2024-26859
- CVE-2024-27028
- CVE-2023-47233
- CVE-2024-24861
- CVE-2024-26976
- CVE-2024-26974
- CVE-2024-26973
- CVE-2024-35821
- CVE-2024-25739
- CVE-2024-26969
- CVE-2024-26966
- CVE-2024-26965
- CVE-2024-35809
- CVE-2024-35807
- CVE-2024-35806
- CVE-2024-35819
- CVE-2024-26956
- CVE-2024-26955
- CVE-2024-26642
- CVE-2024-27059
- CVE-2024-35825
- CVE-2024-35823
- CVE-2022-48627
- CVE-2024-35789
- CVE-2024-35815
- CVE-2024-35822
- CVE-2024-26931
- CVE-2024-26934
- CVE-2024-35915
- CVE-2024-35910
- CVE-2024-24857
- CVE-2024-24858
- CVE-2023-52620
- CVE-2024-35902
- CVE-2024-35898
- CVE-2024-35893
- CVE-2024-35886
- CVE-2024-36020
- CVE-2024-35888
- CVE-2024-35944
- CVE-2024-35936
- CVE-2024-35935
- CVE-2024-35933
- CVE-2023-52699
- CVE-2024-35930
- CVE-2024-35925
- CVE-2024-35922
- CVE-2023-52880
- CVE-2024-35877
- CVE-2024-26817
- CVE-2024-35982
- CVE-2024-35978
- CVE-2024-35973
- CVE-2024-35969
- CVE-2024-35960
- CVE-2024-35955
- CVE-2024-27020
- CVE-2024-27013
- CVE-2024-27008
- CVE-2024-27001
- CVE-2024-26997
- CVE-2024-26994
- CVE-2024-26993
- CVE-2024-26984
- CVE-2024-26981
- CVE-2024-27396
- CVE-2024-27395
- CVE-2024-36004
- CVE-2024-26922
- CVE-2024-35849
- CVE-2024-35847
- CVE-2024-35984
- CVE-2024-35997
- CVE-2024-36941
- CVE-2024-36940
- CVE-2024-36959
- CVE-2024-36934
- CVE-2024-36933
- CVE-2024-36954
- CVE-2024-36919
- CVE-2024-36950
- CVE-2024-36964
- CVE-2024-36905
- CVE-2024-36904
- CVE-2024-27398
- CVE-2024-27399
- CVE-2024-36017
- CVE-2024-36946
- CVE-2024-36902
- CVE-2024-26923
- CVE-2024-27401
- CVE-2024-36886
- CVE-2024-35947
- CVE-2024-36960
- CVE-2024-36883
- CVE-2023-52429
- CVE-2024-38587
- CVE-2024-38601
- CVE-2024-38582
- CVE-2024-36016
- CVE-2024-38579
- CVE-2024-38578
- CVE-2024-38599
- CVE-2024-38598
- CVE-2024-38567
- CVE-2024-38565
- CVE-2024-38560
- CVE-2024-38559
- CVE-2024-38596
- CVE-2024-38558
- CVE-2024-38612
- CVE-2024-38552
- CVE-2024-38549
- CVE-2024-36014
- CVE-2024-38589
- CVE-2024-38637
- CVE-2024-38634
- CVE-2024-38633
- CVE-2024-38627
- CVE-2024-36015
- CVE-2024-39292
- CVE-2024-38621
- CVE-2024-38381
- CVE-2024-37356
- CVE-2024-37353
- CVE-2024-36286
- CVE-2024-38780
- CVE-2024-38659
- CVE-2024-33621
- CVE-2024-38618
- CVE-2024-31076
- CVE-2024-36288
- CVE-2024-38583
- CVE-2023-52628
- CVE-2024-36971
- CVE-2023-0386
erratum: 1079
announced: 2024-07-03
support: core
