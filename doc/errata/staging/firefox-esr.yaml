product: ucs
release: "5.0"
version: [6, 7]
scope: ucs_5.0-0-errata5.0-7
src: firefox-esr
fix: 115.9.1esr-1~deb10u1
desc: |
 This update addresses the following issues:
 * CVE-2024-29944: An attacker was able to inject an event handler into a
   privileged object that would allow arbitrary JavaScript execution in the
   parent process. Note: This vulnerability affects Desktop Firefox only, it
   does not affect mobile versions of Firefox.
 * CVE-2024-0743: An unchecked return value in `TLS` handshake code could have
   caused a potentially exploitable crash.
 * CVE-2024-2607: Return registers were overwritten which could have allowed
   an attacker to execute arbitrary code. Note: This issue only affected
   `Armv7-A` systems. Other operating systems are unaffected.
 * CVE-2024-2608: `AppendEncodedAttributeValue()`,
   `ExtraSpaceNeededForAttrEncoding()` and `AppendEncodedCharacters()` could
   have experienced integer overflows, causing underallocation of an output
   buffer leading to an out of bounds write.
 * CVE-2024-2616: To harden `ICU` against exploitation, the behavior for
   out-of-memory conditions was changed to crash instead of attempt to
   continue.
 * CVE-2023-5388: `NSS` was susceptible to a timing side-channel attack when
   performing `RSA` decryption. This attack could potentially allow an
   attacker to recover the private data.
 * CVE-2024-2610: Using a markup injection an attacker could have stolen nonce
   values. This could have been used to bypass strict content security
   policies.
 * CVE-2024-2611: A missing delay on when pointer lock was used could have
   allowed a malicious page to trick a user into granting permissions.
 * CVE-2024-2612: If an attacker could find a way to trigger a particular code
   path in `SafeRefPtr`, it could have triggered a crash or potentially be
   leveraged to achieve code execution.
 * CVE-2024-2614: Memory safety bugs present in Firefox `123`, Firefox `ESR`
   `115.8`, and Thunderbird `115.8`. Some of these bugs showed evidence of
   memory corruption and we presume that with enough effort some of these
   could have been exploited to run arbitrary code.
bug: [57198]
cve:
- CVE-2024-29944
- CVE-2024-0743
- CVE-2024-2607
- CVE-2024-2608
- CVE-2024-2616
- CVE-2023-5388
- CVE-2024-2610
- CVE-2024-2611
- CVE-2024-2612
- CVE-2024-2614
