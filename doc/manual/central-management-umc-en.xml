<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE chapter [
	<!ENTITY % extensions SYSTEM "../stylesheets/macros.ent" >
	<!ENTITY % DocBookDTD PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
	<!ENTITY % entities SYSTEM "../stylesheets/macros-en.ent" >
	%extensions;
	%DocBookDTD;
	%entities;
]>
<chapter id="central:general">
<title>&ucsWeb;</title>

<section id="central-management-umc:Introduction">
	<title>Introduction</title>
	<figure id="fig-ucs-portal">
		<title>UCS portal page</title>
		<graphic align="center" width="100%" fileref="illustrations50/portal_en.png"/>
	</figure>
	<para>
		The &ucsWeb; is the central tool for managing a UCS domain as well as for accessing installed applications of the domain.
	</para>
	<para>
		The &ucsWeb; is divided into several subpages which all have a similarly designed header.
		Via the symbols in the top right, one may launch a search on the current page (magnifier) or open the user menu (three bars) (login is possible through the latter).
		The login at the web interface is done via a central page once for all sub pages of UCS as well as for third party applications as far as a web based <foreignphrase>single sign-on</foreignphrase> is supported (<xref linkend="central-management-umc:login"/>).
	</para>
	<para>
		Central starting point for users and administrators for all following actions is the UCS portal page (cf. <xref linkend="fig-ucs-portal"/>).
		By default, the portal page is available on all system roles and allows an overview of all Apps and further services which are installed in the UCS domain.
		All aspects of the portal page can be customized to match one's needs (<xref linkend="central:portal"/>).
	</para>
	<para>
		For environments with more than one server, an additional entry to a server overview page is shown on the portal page.
		This sub page gives an overview of all available UCS systems in the domain.
		It allows a fast navigation to other systems in order to adjust local settings via UMC modules.
	</para>
	<para>
		UMC modules are the web based tool for the administration of the UCS domain.
		There are various modules available for the administration of the different aspects of a domain depending on the respective system role.
		Installing additional software components may add new UMC modules to the system.
		<xref linkend="central:user-interface"/> describes their general operation.
	</para>
	<para>
		The subsequent sections detail the usage of various aspects of the domain management.
		<xref linkend="central:navigation"/> gives an overview of the LDAP directory browser.
		The use of administrative settings via policies is discussed in <xref linkend="central:policies"/>.
		How to extend the scope of function of the domain administration is detailed in <xref linkend="central:extendedattrs"/>.
		<xref linkend="central:cn-and-ous"/> details how containers and organizational units can be used to structure the LDAP directory.
		<xref linkend="delegated-administration"/> explains delegating administration rights to additional user groups.
	</para>
	<para>
		In conclusion, the command line interface of the domain administration is illustrated
		(<xref linkend="central:udm"/>), and the evaluation of domain data via the
		UCS reporting function are explained (<xref linkend="central:reports"/>).
	</para>

	<section id="central:access">
		<title>Access</title>
		<para>
			The &ucsWeb; can be opened on any UCS system via the URL <uri>https://servername/</uri>.
			Alternatively, access is also possible via the server's IP address.

			Under certain circumstances it may be necessary to access
			the services over an insecure connection (e.g., if no SSL
			certificates have been created for the system yet). In this
			case, <uri>http</uri> must be used instead of <uri>https</uri> in the
			URL. In this case, passwords are sent over the network in plain text!
		</para>
	</section>

	<section id="central:browser-compatibility">
		<title>Browser compatibility</title>
		<para>
			The &ucsWeb; uses numerous JavaScript and CSS functions.
			Cookies need to be permitted in the browser.
			The following browsers are supported:
		</para>
		<itemizedlist>
			<listitem><simpara><application>Chrome</application> as of version 85</simpara></listitem>
			<listitem><simpara><application>Firefox</application> as of version 78</simpara></listitem>
			<listitem><simpara><application>Microsoft Edge</application> as of version 88</simpara></listitem>
			<listitem><simpara><application>Safari</application> and <application>Safari Mobile</application> as of version 13</simpara></listitem>
		</itemizedlist>
		<para>
			Users with older browsers may experience display problems or the site does not work at all.
		</para>
		<para>
			The &ucsWeb; is available in German and English (and French if it is chosen as language during the installation from DVD);
			the language to be used can be changed via the entry <guimenu>Switch language</guimenu> of the user menu in the upper right corner.
		</para>
	</section>

	<section id="central:theming">
		<title>Switching between dark and light theme for &ucsWeb;s</title>
		<para>
			All &ucsWeb;s have a dark and a light theme that can be switched between with the &ucsUCRV;
			<envar>ucs/web/theme</envar>. The value of <envar>ucs/web/theme</envar> corresponds to a CSS file under
			<filename>/usr/share/univention-web/themes/</filename> with the same name (without file extension).
			For example, setting <envar>ucs/web/theme</envar> to <emphasis>'light'</emphasis>
			will use <filename>/usr/share/univention-web/themes/light.css</filename>
			as theme for all &ucsWeb;s.
		</para>
		<section id="central:theming:custom">
			<title>Creating a custom theme/Adjusting the design of &ucsWeb;s</title>
			<para>
				To create a custom theme it is advised not to edit
				<filename>/usr/share/univention-web/themes/dark.css</filename> or
				<filename>/usr/share/univention-web/themes/light.css</filename>
				since the changes may be overwritten when upgrading UCS.
				Instead copy one of these files to e.g. <filename>/usr/share/univention-web/themes/mytheme.css</filename>
				and set the &ucsUCRV; <envar>ucs/web/theme</envar> to <emphasis><literal>'mytheme'</literal></emphasis>.
			</para>
			<para>
				The files <filename>/usr/share/univention-web/themes/dark.css</filename> and
				<filename>/usr/share/univention-web/themes/light.css</filename> contain the same list of
				<ulink url="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">CSS variables</ulink>.
				These variables are used in other CSS files and are the supported layer of configurability
				for &ucsWeb;s. The names and current use case for these variables will not change between UCS upgrades
				but new ones may be added.
			</para>
			<para>
				Some &ucsWeb;s import their own local <filename>custom.css</filename> file which can be used to further
				adjust the design of that page. These are <filename>/usr/share/univention-management-console-login/css/custom.css</filename>
				(<xref linkend="domain:saml:ssologin"/>) and <filename>/usr/share/univention-portal/custom.css</filename> (<xref linkend="central:portal"/>).
				The files are empty when installing UCS and are not modified when installing any UCS update.
				Be aware though that a given
				<ulink url="https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors">CSS selector</ulink>
				may break when installing any UCS update.
			</para>
		</section>
	</section>

	<section id="central-management-umc:language">
		<title>Language Compatibility</title>
		<para>
			bla bla
		</para>
	
	</section>

	<section id="central-management-umc:feedback">
		<title>Feedback on UCS</title>
		<para>
			By choosing the <guimenu>Help &ar; Feedback</guimenu> option in the upper right menu,
			you can provide feedback on UCS via a web form.
		</para>
	</section>

	<section id="central-management-umc:piwik">
	  <title>Collection of usage statistics</title>
	  <para>
		Anonymous usage statistics on the use of the &ucsWeb; are collected when using the <emphasis>core edition</emphasis>
		version of UCS (which is generally used for evaluating UCS). Further
		information can be found in <u:sdb>1318</u:sdb>.
	  </para>
	</section>

</section>

<section id="central-management-umc:login">
	<title>Login</title>
	<figure id="umc-login">
	<title>UCS login page</title>
		<graphic align="center" width="35%" fileref="illustrations50/umc_login_en.png"/>
	</figure>
	<para>
		UCS comes with a central login page.
		Logging in to the &ucsWeb; is done with the credentials of the respective domain account.
		On the portal, the login process can be started either via the user menu an then <guimenu>Login</guimenu> or by clicking on the entry in the portal itself.
		If a site (e.g., a UMC module) requires a login, it will redirect to the central login page.
		To log out, the entry <guimenu>Logout</guimenu> in the user menu can be used.
	</para>
	<para>
		By default a login does not use <foreignphrase>single sign-on</foreignphrase>.
		The login can be changed to use <foreignphrase>single sign-on</foreignphrase> (SSO) via SAML (cf. <xref linkend="domain:saml"/>).
		To configure this, <uri>ucs-sso.<replaceable>domainname</replaceable></uri> must be reachable and the &ucsUCRV; <envar>portal/auth-mode=saml</envar> has to be set.
		For the change to take effect the portal server needs to be restarted:
		<command>systemctl restart univention-portal-server.service</command>.
		The login using the user menu has now be changed.
		Portal tiles have to be adapted manually.
		The default portal has a SSO login tile preconfigured which can be activated using the portal edit mode.
	</para>
	<para>
		After successful login, a session is valid for all UCS systems of the domain as well as for third party Apps if these support web based SSO.
		It is possible to enforce a login on the local system by clicking on the link <guimenu>Login without Single Sign On</guimenu>.
	</para>
	<para>
		In the login mask, enter the <guimenu>Username</guimenu> and <guimenu>Password</guimenu> of the corresponding domain account:
	</para>
	<itemizedlist>
		<listitem>
			<simpara>
			When logging in with the <systemitem class="username">Administrator</systemitem> account on
			a &ucsPrimaryDN; or &ucsBackupDN;, UMC modules for the administration
			and configuration of the local system as well as UMC modules for the administration of data
			in the LDAP directory are displayed.
			The initial password of this account has been specified in the setup wizard during the installation.
			It corresponds to the initial password of the local <systemitem class="username">root</systemitem> account.
			<systemitem class="username">Administrator</systemitem> is also the account which should be used for the initial login at a newly installed &ucsPrimaryDN; system.
			</simpara>
		</listitem>
		<listitem>
			<simpara>
			In some cases, it might be necessary to log on with the system's local <systemitem class="username">root</systemitem> account (see <xref linkend="computers:rootaccount"/>).
			This account enables access only to the UMC modules for the administration and configuration of the local system.
			</simpara>
		</listitem>
		<listitem>
		  <simpara>
			When logging on with another user account, the UMC modules approved for the user
			are shown. Additional information on allowing further modules can be found in <xref
			linkend="delegated-administration"/>.
			</simpara>
		</listitem>
	</itemizedlist>

	<para>
		The duration of a browser session is 8 hours for the SSO login.
		After these, the login process must be carried out again.
		For the login at the local UCS system, the browser session will be automatically closed after an inactivity of 8 hours.
	</para>

	<para>
	  By installing a third-party application, such as <application>privacyIDEA</application>,
	  it is possible to extend the &ucsWeb; authentication with a two-factor authentication (2FA).
	  These extensions can be installed from the Univention App Center.
	</para>

</section>

<section id="central:portal">
	<title>UCS portal page</title>
	<para>
		Portal pages offer a central view of all available services in a UCS domain.
		Requirements strongly differ from small to large environments in organizations, public authorities, or even schools.
		Therefore, UCS implemented a very flexible and individually customizable concept for portal pages.
	</para>
	<para>
		As illustrated in <xref linkend="portal-schema"/>, portal entries (i.e., links to applications/Apps/services; UDM object type <classname>portals/entry</classname>) can be assigned to none, one or multiple portal categories.
		A portal category (UDM object type <classname>portals/category</classname>) can be assigned to none, one or multiple portals.
		A portal itself (UDM object type <classname>portals/portal</classname>) renders all portal categories which are assigned to it.
	</para>
	<para>
		The portal <foreignphrase>domain</foreignphrase>, shipped with every installation, is configured on each server by default.
		In addition to all installed applications of the domain, links to &ucsUMC; as well as the server overview are shown on this portal page.
	</para>
	<para>
		Custom portals and portal entries can be defined and managed either via the UMC module <guimenu>Portal</guimenu> or directly on the portal site.
	</para>
	<para>
		After logging in to the portal on the &ucsPrimaryDN; or &ucsBackupDN;, members of the <systemitem class="groupname">Domain Admins</systemitem> group can edit the portal after clicking on the corresponding entry in the user menu.
		They now can create new entries on the portal, modify existing entries, modify the order or the design.
	</para>
	<para>
		Advanced settings, such as adding new portals or setting which group members can see which portal entries can be made using the UMC portal settings module.
	</para>
	<para>
		By default, all portal entries are displayed for everyone. In the UMC module <guimenu>Portal</guimenu> in the category <guimenu>Login</guimenu>,
		it can be configured whether anonymous visitors have to log in before they can see entries.
		It is also possible to limit certain entries for certain groups. This requires the LDAP attribute <property>memberOf</property>.
		Nested group memberships (i.e., groups in groups) are evaluated.
	</para>
	<para>
		Further design adjustments can be made in the file <filename>/usr/share/univention-portal/css/custom.css</filename>.
		This file will not be overwritten during an update.
	</para>
	<figure id="portal-schema">
		<title>Schema of the portal concept in UCS: Portals can be independently defined and assigned to UCS systems as start site; a link entry can be displayed on multiple portals.</title>
		<graphic align="center" width="60%" fileref="illustrations50/portal-schema.png"/>
	</figure>
	<section id="central-management-umc:Assignment-of-portal-settings-module">
		<title>Assign rights for portal settings</title>
		<para>
			The following describes how to make the UMC module <guimenu>Portal</guimenu> accessible to selected groups or users. This example assumes that a group <guimenu>Portal Admins</guimenu> has been created and members of this group are supposed to be given access to the portal settings.
		</para>
		<para>
			On a <guimenu>&ucsPrimaryDN;</guimenu> an ACL file has to be created first, for example <filename>/opt/62my-portal-acl.acl</filename>.
			This file has to have the following content to allow the necessary ACL changes:
		</para>
		<programlisting>
access to dn="cn=portal,cn=univention,@%@ldap/base@%@" attrs=children
  by group/univentionGroup/uniqueMember="cn=Portal Admins,cn=groups,@%@ldap/base@%@" write
  by * +0 break

access to dn.children="cn=portal,cn=univention,@%@ldap/base@%@" attrs=entry,@univentionObject,@univentionPortalEntry,
@univentionPortal,@univentionPortalCategory,children
  by group/univentionGroup/uniqueMember="cn=Portal Admins,cn=groups,@%@ldap/base@%@" write
  by * +0 break
		</programlisting>
		<para>
		Then execute the following command to create an LDAP object for the LDAP ACLs:
		</para>
		<programlisting language="sh">
udm settings/ldapacl create \
  --position "cn=ldapacl,cn=univention,$(ucr get ldap/base)" \
  --set name=62my-portal-acl \
  --set filename=62my-portal-acl \
  --set data="$(bzip2 -c /opt/62my-portal-acl.acl | base64)" \
  --set package="62my-portal-acl" \
  --set packageversion=1
		</programlisting>
		<para>
			If the ACL is to be deleted again, the following command can be used:
		</para>
		<programlisting language="sh">
udm settings/ldapacl remove \
  --dn "cn=62my-portal-acl,cn=ldapacl,cn=univention,$(ucr get ldap/base)"
		</programlisting>
		<para>
			An appropriate UMC policy can now be created via UMC. The following <guimenu>UMC operations</guimenu> must be allowed within the policy: <guimenu>udm-portal</guimenu>, <guimenu>udm-syntax</guimenu>, <guimenu>udm-validate</guimenu> and <guimenu>udm-license</guimenu>. How to create a policy is described in <xref linkend="central-management-umc:Creating_a_policy"/>. Now the newly created policy only needs to be assigned to the desired object, in this case the group <guimenu>Portal Admins</guimenu>. This can also be done directly within the UMC. For this example, navigate to the group module and edit the desired group there. In the group settings, existing policies for the group object can be selected under <guimenu>Policies</guimenu>. More detailed information about policy assignment is described under <xref linkend="central:policies:assign"/>.
		</para>
	</section>
</section>

<section id="central:user-interface">
	<title>&ucsUMC; modules</title>

	<section id="central-management-umc:introduction">
		<title>Introduction</title>
		<para>
			&ucsUMC; (UMC) modules are the web-based tool for administration of the UCS domain.
			They are shown on the portal page (<xref linkend="central:portal"/>) for logged in administrators.
			Depending on the system role, different UMC modules are available.
			Additionally installed software components may bring their own new UMC modules.
		</para>
		<para>
			UMC modules for the administration of all the data included in the LDAP
			directory (such as users, groups and computer accounts) are only
			provided on &ucsPrimaryDN;s and &ucsBackupDN;s. Changes made in these
			modules are applied to the whole domain.
		</para>
		<para>
			UMC modules for the configuration and administration of the local
			system are provided on all system roles. These modules can for example be used to
			install additional applications and updates, adapt the local
			configuration via &ucsUCR; or start/stop services.
		</para>
	</section>

	<section id="central:license">
		<title>Activation of UCS license / license overview</title>
		<para>
			The UCS license of a domain can be managed on the &ucsPrimaryDN; via the UMC module <guimenu>Welcome!</guimenu>.
		</para>
		<para>
			The current license status can be shown by clicking the <guimenu>License info</guimenu> button.
		</para>
		<figure id="umc-license">
			<title>Displaying the UCS license</title>
			<graphic scalefit="1" width="70%" align="center" fileref="illustrations50/umc_coreedition_en.png"/>
		</figure>
		<para>
		  The button <guimenu>Import a license</guimenu> opens a dialogue in which 
		  a new license key can be activated (otherwise the core edition license
		  is used as default license).
		  A license file can be selected and imported via the button <guimenu>Import from file...</guimenu>.
		  Alternatively, the license key can also be copied into the input field below and
		  activated with <guimenu>Import from text field</guimenu>.
		</para>

		<para>
		  Installation of most of the applications in the Univention App Center requires a
		  personalized license key. UCS core edition licenses can
		  be converted by clicking <guimenu>Request a new license</guimenu>.
		  The current license key is sent to Univention and the updated key
		  returned to a specified e-mail address within a few minutes. The new key can be imported
		  directly. The conversion does not affect the scope of the license.
		</para>

		<para>
		  If the number of licensed user or computer objects is exceeded, it is not possible to create
		  any additional objects in UMC modules or edit any existing ones unless an extended
		  license is imported or no longer required users or computers are deleted. A corresponding
		  message is displayed when opening a UMC module if the license is exceeded.
		</para>
	</section>

	<section id="central-management-umc:Operating_instructions_for_domain_modules">
		<title>Operating instructions for modules to administrate LDAP directory data</title>
		<para>
			All UMC modules for managing LDAP directory objects such as user,
			group and computer accounts or configurations for printers, shares,
			mail and policies are controlled identically from
			a structural perspective. The following examples are presented using
			the user management but apply equally for all modules.
			The operation of the DNS and DHCP modules is slightly different. Further information can
			be found in <xref linkend="ip-config:dns:umc"/> and <xref
			linkend="networks::dhcp::general"/>.
		</para>
		<figure id="umc-modules">
			<title>Module overview</title>
			<graphic scalefit="1" width="100%" fileref="illustrations50/umc-favorites-tab-en.png"/>
		</figure>
		<para>
			The configuration properties/possibilities of the
			modules are described in the following chapters:
		</para>
		<itemizedlist>
			<listitem><simpara>Users - <xref linkend="users:general"/></simpara></listitem>
			<listitem><simpara>Groups - <xref linkend="groups"/></simpara></listitem>
			<listitem><simpara>Computers - <xref linkend="computers:general"/></simpara></listitem>
			<listitem><simpara>Networks - <xref linkend="networks::introduction"/></simpara></listitem>
			<listitem><simpara>DNS - <xref linkend="networks:dns"/></simpara></listitem>
			<listitem><simpara>DHCP - <xref linkend="module:dhcp:dhcp"/></simpara></listitem>
			<listitem><simpara>Shares - <xref linkend="shares::general"/></simpara></listitem>
			<listitem><simpara>Printers - <xref linkend="print::general"/></simpara></listitem>
			<listitem><simpara>E-mail - <xref linkend="mail::general"/></simpara></listitem>
			<listitem><simpara>Nagios - <xref linkend="nagios::general"/></simpara></listitem>
		</itemizedlist>
		<para>
			The use of policies (<xref linkend="central:policies"/>) and the LDAP
			navigation (<xref linkend="central:navigation"/>) are described
			separately.
		</para>

		<section id="umc:usage:search">
			<title>Searching for objects</title>

			<para>
				The module overview lists all the objects managed by this
				module. <guimenu>Search</guimenu> performs a search for a selection of important
				attributes (e.g., for user objects by first and last name, primary e-mail address,
				description, employee number and user name). A wildcard search is also possible, e.g.,
				<emphasis>m*</emphasis>.
			</para>

			<para>
				Clicking on the <guimenu>Advanced options</guimenu> button (the filter icon) next to the input field
				displays additional search options:

				<itemizedlist>
					<listitem><simpara>
						The <guimenu>Search in</guimenu> field can be used to select whether the complete
						LDAP directory or only individual LDAP containers/OUs are searched. Further
						information on the structure of the LDAP directory service can be found in <xref
						linkend="central:cn-and-ous"/>.
					</simpara></listitem>

					<listitem><simpara>
						The <guimenu>Property</guimenu> field can be used to search for a certain
						attribute directly.
					</simpara></listitem>

					<listitem><simpara>
						The majority of the modules administrate a range of types of LDAP objects; the
						computer management for example administrates different objects for the individual
						system roles. The search can be limited to one type of LDAP object.
					</simpara></listitem>

					<listitem><simpara>
						Some of the internally used user groups and groups (e.g., for domain joins) are not shown by default.
						If the <guimenu>Include hidden objects</guimenu> option is enabled, these objects are also shown.
					</simpara></listitem>
				</itemizedlist>
			</para>

			<figure id="umc-search">
				<title>Searching for users</title>
				<graphic scalefit="1" width="100%" fileref="illustrations50/umc_user_en.png"/>
			</figure>
		</section>

		<section id="central-management-umc:create">
			<title>Creating objects</title>
			<para>
			  At the top of the table that shows the objects is a toolbar which can be
			  used to create a new object using <guimenu>Add</guimenu>.
			</para>

		  <para>
			There are simplified wizards for some UMC modules (users, hosts), in which only the most
			important settings are requested. All attributes can be shown by clicking on
			<guimenu>Advanced</guimenu>.
		  </para>

		</section>

		<section id="central:user-interface:edit">
			<title>Editing objects</title>
			<para>
				Right-clicking on an LDAP object and selecting
				<guimenu>Edit</guimenu> allows to edit the object. The
				individual attributes are described in the individual
				documentation chapters. By clicking on <guimenu>Save</guimenu>
				at the top of the module, all changes are written into the
				LDAP directory. The <guimenu>Back</guimenu> button cancels the editing and returns to
				the previous search view.
			</para>

			<para>
				In front of every item in the result list is a checkbox with which
				individual objects can be selected. The selection status is also
				displayed in toolbar at the top of the table,
				e.g., <guimenu>2 users	of 102 selected</guimenu>
				If more than one object is selected,
				clicking on the <guimenu>Edit</guimenu> button in the toolbar activates the
				multi edit mode. The same attributes are now shown as when
				editing an individual object, but the changes are only accepted for
				the objects where the <guimenu>Overwrite</guimenu> checkbox is activated.
				Only objects of the same type can be edited at the same time.
			</para>
		</section>

		<section id="central:user-interface:remove">
			<title>Deleting objects</title>
			<para>
			  Right-clicking on an LDAP object and selecting <guimenu>Delete</guimenu> allows to
			  delete the object. The prompt must be confirmed. Some objects use internal references
			  (e.g., a DNS or DHCP object can be associated with computer objects). These can also
			  be deleted by selecting the <guimenu>Delete referring objects</guimenu> option.
			</para>

			<para>
				Similar to editing multiple objects at once,
				multiple objects can be deleted at once via the <guimenu>Delete</guimenu> button in the
				toolbar.
			</para>
		</section>

		<section id="central:user-interface:move">
			<title>Moving objects</title>
			<para>
			  Right-clicking on an LDAP object and selecting <guimenu>Move to...</guimenu> allows to
			  to select an LDAP position to which the object should be moved.
			</para>

			<para>
				Similar to editing multiple objects at once,
				multiple objects can be moved at once by selecting <guimenu>More &ar; Move to...</guimenu> in the
				toolbar.
			</para>
		</section>
	</section>

	<section id="central-management-umc:notifications">
	  <title>Display of system notifications</title>
	  <para>
		UMC modules can deploy system notifications to alert the user to potential errors like join
		scripts which have not been run or necessary actions such as available updates.
		These notifications are shown in the top right corner of the screen and can be viewed again
		in the Notifications menu, which can be opened by clicking the bell icon in the top right corner of the
		screen.
	  </para>
	</section>
</section>

<section id="central:navigation">
	<title>LDAP directory browser</title>
	<para>
		The UMC module <guimenu>LDAP directory</guimenu> can be used to navigate
		through the LDAP directory. When doing so, new objects can be created,
		modified or deleted in the LDAP directory.
	</para>
	<figure id="umc-navigation">
		<title>Navigating the LDAP directory</title>
		<graphic scalefit="1" width="100%" fileref="illustrations50/umc_navigation_en.png"/>
	</figure>
	<para>
		The left half of the screen shows the LDAP directory as a tree
		structure whose elements can be shown and hidden using the arrow icons.
	</para>
	<para>
		Clicking on an element of the tree structure switches to this LDAP
		position and displays the objects at this LDAP position in the
		in the right side of the screen. The <guimenu>Type</guimenu> selection
		list can be used to limit the display
		to selected attributes.
	</para>
	<para>
		The <guimenu>Add</guimenu> button can be used to add new
		objects here too. Similar to the control elements described in
		<xref linkend="central:user-interface"/>, existing objects can also be edited,
		deleted or moved here.
	</para>
	<figure id="umc-container-edit">
		<title>Editing LDAP container settings</title>
		<graphic scalefit="1" width="30%" align="center" fileref="illustrations50/umc_navigation_edit_en.png"/>
	</figure>
	<para>
		Right-clicking on an element in the tree structure allows editing
		the properties of the container or the LDAP base with <guimenu>Edit</guimenu>.
	</para>
</section>

<section id="central:policies">
	<title>Policies</title>
	<para>
		<emphasis>Policies</emphasis> describe administrative settings which can
		practically be used on more than one object. They facilitate the
		administration as they can be connected to containers and then apply
		to all the objects in the container in question and the objects in
		sub containers. The values are applied according to the inheritance principle. For
		every object, the applied value is always that which lies closest to
		the object in question.
	</para>
	<para>
		If, for example, the same password expiry interval is to be defined for all
		users of a location, then a special container can be created for these
		users. After moving the user objects into the container, a password
		policy can be linked to the container. This policy is valid for all
		user objects within the container.
	</para>
	<para>
		An exception to this rule is a value which was defined in a policy in
		the form of <guimenu>fixed attributes</guimenu>. Such values cannot
		be overwritten by subordinate policies.
	</para>
	<para>
		The command line program <command>univention-policy-result</command> can be
		used to show in detail which policy applies to which directory service
		object.
	</para>
	<para>
		Every policy applies to a certain type of UMC domain object, e.g., for
		users or DHCP subnets.
	</para>

	<section id="central-management-umc:Creating_a_policy">
		<title>Creating a policy</title>
		<para>
			Policies can be managed via the UMC module <guimenu>Policies</guimenu>.
			The operation is the same as for the functions
			described in <xref linkend="central:user-interface"/>.
		</para>
		<para>
			The attributes and properties of the policies are described in the
			corresponding chapters, e.g. the DHCP policies in the network chapter.
		</para>

		<para>
		  The names of policies must not contain any umlauts.
		</para>

		<para>
			<guimenu>Referencing objects</guimenu> provides a list of all
			containers or LDAP objects for which this policy currently applies.
		</para>
		<para>
		  The expanded settings host some general policy options which are
		  generally only required in special cases.
		</para>
		<itemizedlist>
			<listitem>
				<simpara>
				  <guimenu>LDAP filter</guimenu>:
				  A LDAP filter expression can be specified here, which an object must match for this policy to get applied.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
			  <guimenu>Required object classes</guimenu>: Here you can specify LDAP object classes
			  that an object must possess for the policy to apply to this object. If, for example, a
			  user policy is only relevant for Windows environments, the
			  <classname>sambaSamAccount</classname> object class could be demanded here.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
			  <guimenu>Excluded object classes</guimenu>: Similar to the configuration of the
			  required object classes, you can also list object classes here which should be
			  excluded.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
			  <guimenu>Fixed attributes</guimenu>: Attributes can be selected here, the values of
			  which may not be changed by subordinate policies.
				</simpara>
			</listitem>
			<listitem>
				<simpara>
			  <guimenu>Empty attributes</guimenu>: Attributes can be selected here, which are to be
			  set to empty in the policy, meaning they will be stored without containing a
			  value. This can be useful for removing values inherited by an object from a
			  superordinate policy. In subordinate policies, new values can be assigned to the
			  attributes in question.
				</simpara>
			</listitem>
		</itemizedlist>
	</section>

	<section id="central:policies:assign">
		<title>Applying policies</title>
		<para>
			Policies can be assigned in two ways:
		</para>
		<itemizedlist>
			<listitem>
				<simpara>
				A policy can be assigned to the LDAP base or a container/OU. To
				do so, the <guimenu>Policies</guimenu> tab in the properties of the
				LDAP object must be opened in the navigation (see
				<xref linkend="central:navigation"/>).
				</simpara>
			</listitem>
			<listitem>
				<simpara>
				A <guimenu>Policies</guimenu> tab is shown in the UMC modules
				of LDAP directory objects for which there are policies
				available (e.g., for users). A particular policy for a user can
				be specified at this place.
				</simpara>
			</listitem>
		</itemizedlist>
		<para>
			The <guimenu>Policies</guimenu> configuration dialogue is functionally
			identical; however, all policy types are offered when assigning
			policies to a LDAP container, whilst only the policy types applicable
			for the object type in question are offered when assigning policies to
			an LDAP object.
		</para>
		<para>
			A policy can be assigned to the LDAP object or container under
			<guimenu>Policies</guimenu>.
			The values resulting from this policy are displayed directly.
			The <guimenu>Inherited</guimenu> setting means that the settings are adopted
			from a superordinate policy again - when one exists.
		</para>
		<para>
			If an object is linked to a policy, or inherits policy settings which
			cannot be applied to the object, the settings remain without effect
			for the object. This makes it possible, for example, to assign a policy
			to the base entry of the LDAP directory, which is then valid for all the
			objects of the domain which can apply this policy. Objects which
			cannot apply to this policy are not affected.
		</para>
	</section>

	<section id="central-management-umc:Editing_a_policy">
		<title>Editing a policy</title>
		<para>
			Policies can be edited and deleted in the UMC module
			<guimenu>Policies</guimenu>. The interface is described in
			<xref linkend="central:user-interface"/>.
		</para>
		<caution>
			<para>
			When editing a policy, the settings for all the objects linked to this
			policy are changed! The values from the changed policy apply to
			objects already registered in the system and linked to the policy, in
			the same way as to objects added in the future.
			</para>
		</caution>
		<para>
			The policy tab of the individual LDAP objects also includes the
			<guimenu>edit</guimenu> option, which can be used to edit the policy
			currently applicable for this object.
		</para>
	</section>
</section>

<section id="central:extendedattrs">
	<title>Expansion of UMC modules with extended attributes</title>
	<para>
		The domain management UMC modules allow the comprehensive
		management of the data in a domain. <emphasis>Extended attributes</emphasis>
		offer the possibility of integrating new attributes in the domain
		management which are not covered by the UCS standard scope. Extended
		attributes are also employed by third party vendors for the integration
		of solutions in UCS.
	</para>
	<para>
		Extended attributes are managed in the UMC module <guimenu>LDAP directory</guimenu>.
		There one needs to switch to
		the <uri>univention</uri> container and then to the <uri>custom attributes</uri>
		subcontainer. Existing attributes can be edited here or a
		new <guimenu>Settings: extended attribute</guimenu> object created
		here with <guimenu>Add</guimenu>.
	</para>
	<figure id="umc-extended-attr">
		<title>Extended attribute for managing a car license</title>
		<graphic scalefit="1" width="90%" align="center" fileref="illustrations50/umc_extended_attribute_en.png"/>
	</figure>
	<para>
		Extended attributes can be internationalized. In this case, the name
		and description should be compiled in English as this is the standard
		language for UMC modules.
	</para>

	<table>
	  <title>'General' tab</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>
		<tbody>

		  <row>
			<entry>Unique name</entry>
			<entry>
			  The name of the LDAP object which will be used to store the extended attribute. Within
			  a container, the name has to be unique.
			</entry>
		  </row>

		  <row>
			<entry>UDM CLI name</entry>
			<entry>
			  The specified attribute name should be used when employing the command line
			  interface &ucsUDM;. When the extended attribute is saved, the
			  <emphasis>Unique name</emphasis> of the <emphasis>General</emphasis> tab is automatically
			  adopted and can be subsequently modified.
			</entry>
		  </row>

		  <row>
			<entry>Short description</entry>
			<entry>
			  Used as title of the input field in UMC modules or as the attribute description in
			  the command line interface.
			</entry>
		  </row>

		  <row>
			<entry>Translations of short description</entry>
			<entry>
			  Translated short descriptions can be saved in several languages so that the title of
			  extended attributes is also output with other language settings in the respective
			  national language. This can be done by assigning the respective short description to a
			  language code (e.g., <literal>de_DE</literal> or <literal>fr_FR</literal>) in this
			  input field.
			</entry>
		  </row>

		  <row>
			<entry>Long description</entry>
			<entry>
			  This long description is shown as a tool tip in the input fields in UMC modules.
			</entry>
		  </row>

		  <row>
			<entry>Translations of long description</entry>
			<entry>
			  Additional information displayed in the tool tip for an extended attribute can also be
			  saved for several languages. This can be done by assigning the respective long
			  description to a language code (e.g., <literal>de_DE</literal> or
			  <literal>fr_FR</literal>) in this input field.
			</entry>
		  </row>
		</tbody>
	  </tgroup>
	</table>

	<table>
	  <title>'Module' tab</title>
		<tgroup cols="2">
		  <colspec colnum="1" colname="col1" colwidth="1*"/>
		  <colspec colnum="2" colname="col2" colwidth="2*"/>
		  <thead>
			<row>
			  <entry>Attribute</entry>
			  <entry>Description</entry>
			</row>
		  </thead>
		  <tbody>
			<row>
			  <entry>Modules to be extended</entry>
			  <entry>
				The &ucsUDM; module which is to be expanded with the extended attribute. An extended
				attribute can apply for multiple modules.
			  </entry>
			</row>

			<row>
			  <entry>Required options/object classes</entry>
			  <entry>
				Some extended attributes can only be used practically if certain object classes are
				activated on the <emphasis>(Options)</emphasis> tab. One or more options can
				optionally be saved in this input field so that this extended attribute is displayed
				or editable.
			  </entry>
			</row>

			<row>
			  <entry>Hook class</entry>
			  <entry>
				The functions of the hook class specified here are used during saving, modifying and
				deleting the objects with extended attributes. Additional information can be found
				in <xref linkend="developer-reference"/>.
			  </entry>
			</row>

		  </tbody>
		</tgroup>
	</table>

	<table>
	  <title>'LDAP mapping' tab</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>
		<tbody>

		  <row>
			<entry>LDAP object class</entry>
			<entry>
			  <para>
				Object class to which the attribute entered under <emphasis>LDAP attribute</emphasis>
				belongs.
			  </para>

			  <para>
				Predefined LDAP schema extensions for extended attributes are provided with the
				object class <classname>univentionFreeAttributes</classname>. Further information can
				be found in <xref linkend="domain:ldap:extensions"/>.
			  </para>

			  <para>
				Each LDAP object which should be extended with an attribute is automatically
				extended with the LDAP object class specified here if a value for the extended
				attribute has been entered by the user.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>LDAP attribute</entry>
			<entry>
			  The name of the LDAP attribute where the values of the LDAP object are to be
			  stored. The LDAP attribute must be included in the specified object class.
			</entry>
		  </row>

		  <row>
			<entry>Remove object class if the attribute is removed</entry>
			<entry>
			  If the value of an extended attribute in a UMC module is deleted, the attribute is removed
			  from the LDAP object. If no further attributes of the registered object class are used
			  in this LDAP object, the <emphasis>LDAP object class</emphasis> will also be removed
			  from the LDAP object if this option is activated.
			</entry>
		  </row>
		</tbody>
	  </tgroup>
	</table>

	<table>
	  <title>'UMC' tab</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>
		<tbody>

		  <row>
			<entry>Do not show this extended attribute in UMC modules</entry>
			<entry>
			  This option can be activated if an attribute should only be administrated internally
			  instead of by the administrator, e.g., indirectly by scripts. The attribute can then
			  only be set via the command line interface &ucsUDM; and is not displayed in
			  UMC modules.
			</entry>
		  </row>

		  <row>
			<entry>Exclude from from of UMC module</entry>
			<entry>
			  <para>
				If it should not be possible to search for an extended attribute in the search
				window of a wizard, this option can be activated to remove the extended attribute
				from the list of possible search criteria.
			  </para>

			  <para>
				This is only needed in exceptional cases.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>Ordering number</entry>
			<entry>
			  <para>
				If several extended attributes are to be managed on one tab, the order of the
				individual attributes on the tab can be influenced here. They are added to the end
				of the tab or the group in question in ascending order of their numbers.
			  </para>

			  <para>
				Assigning consecutive position numbers results in the attributes being ordered on
				the left and right alternately in two columns. Otherwise, the positioning starts in
				the left column. If additional attributes have the same position number, their order
				is random.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>Overwrite existing widget</entry>
			<entry>
			  In some cases it is useful to overwrite predefined input fields with extended
			  attributes. If the internal UDM name of an attribute is configured here, its
			  input field is overwritten by this extended attribute. The UDM attribute name can be
			  identified with the command <command>univention-directory-manager</command> (see <xref
			  linkend="central:udm"/>). This option may cause problems if it is applied to a
			  mandatory attribute.
			</entry>
		  </row>

		  <row>
			<entry>Span both columns</entry>
			<entry>
			  As standard all input fields are grouped into two columns. This option can be used for
			  overlong input fields, which need the full width of the tab.
			</entry>
		  </row>

		  <row>
			<entry>Tab name</entry>
			<entry>
			  <para>
				The name of the tab in UMC modules on which the extended attribute should be
				displayed. New tabs can also be added here.
			  </para>

			  <para>
				If no tab name is entered, <emphasis>user-defined</emphasis> will be used.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>Translations of tab name</entry>
			<entry>
			  Translated tab names can be assigned to the corresponding language code
			  (e.g. <literal>de_DE</literal> or <literal>fr_FR</literal>) in this input field.
			</entry>
		  </row>

		  <row>
			<entry>Overwrite existing tab</entry>
			<entry>
			  If this option is activated, the tab in question is overwritten before the
			  extended attributes are positioned on it. This option can be used to hide
			  existing input fields on a predefined tab. It must be noted that this option
			  can cause problems with compulsory fields. If the tab to be overwritten uses
			  translations, the overwriting tab must also include identical translations.
			</entry>
		  </row>

		  <row>
			<entry>Tab with advanced settings</entry>
			<entry>
			  Settings possibilities which are rarely used can be placed in the extended settings
			  tab.
			</entry>
		  </row>

		  <row>
			<entry>Group name</entry>
			<entry>
			  <para>
				Groups allow the structuring of a tab. A group is separated by a gray horizontal bar
				and can be shown and hidden.
			  </para>

			  <para>
				If no group name is specified for an extended attribute, the attribute
				is placed above the first group entry.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>Translations of group name</entry>
			<entry>
			  To translate the name of the group, translated group names for the corresponding
			  language code can be saved in this input field (e.g., <literal>de_DE</literal> or
			  <literal>fr_FR</literal>).
			</entry>
		  </row>

		  <row>
			<entry>Group ordering number</entry>
			<entry>
			  If multiple groups are managed in one tab, this position number can be used to specify
			  the order of the groups. They are shown in the ascending order of their position
			  numbers.
			</entry>
		  </row>
		</tbody>
	  </tgroup>
	</table>

	<table>
	  <title>'Data type' tab</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>
		<tbody>
		  <row>
			<entry>Syntax class</entry>
			<entry>
			  <para>
				When values are entered in UMC modules, a syntax check is performed.
			  </para>

			  <para>
				Apart from standard syntax definitions (<classname>string</classname>) and
				(<classname>integer</classname>), there are three possibilities for expressing a
				binary condition. The syntax <classname>TrueFalse</classname> is represented at LDAP
				level using the strings <literal>true</literal> and <literal>false</literal>,
				the syntax <classname>TrueFalseUpper</classname>corresponds to the OpenLDAP boolean
				values <literal>TRUE</literal> and <literal>FALSE</literal> and the syntax
				<classname>boolean</classname> does not save any value or the string
				<emphasis>1</emphasis>.
			  </para>

			  <para>
				The syntax <classname>string</classname> is the default. An overview of the
				additionally available syntax definitions and instructions on integrating your own
				syntaxes can be found in <xref linkend="developer-reference"/>.
			  </para>
			</entry>
		  </row>

		  <row>
			<entry>Default value</entry>
			<entry>
			  If a preset value is defined here, new objects to be created will be initialized with
			  this value. The value can still be edited manually during creation. Existing objects
			  remain unchanged.
			</entry>
		  </row>

		  <row>
			<entry>Multi value</entry>
			<entry>
			  This option establishes whether a single value or multiple values can be entered in
			  the input mask. The scheme definition of the LDAP attribute specifies whether one or
			  several instances of the attribute may be used in one LDAP object.
			</entry>
		  </row>

		  <row>
			<entry>Value required</entry>
			<entry>
			  If this option is active, a valid value must be entered for the extended attribute in
			  order to create or save the object in question.
			</entry>
		  </row>

		  <row>
			<entry>Editable after creation</entry>
			<entry>
			  This option establishes whether the object saved in the extended attribute can only be
			  modified when saving the object, or whether it can also be modified subsequently.
			</entry>
		  </row>

		  <row>
			<entry>Value is only managed internally</entry>
			<entry>
			  If this option is activated, the attribute cannot be modified manually, neither at
			  creation time, nor later. This is useful for internal state information configured
			  through a hook function or internally inside a module.
			</entry>
		  </row>

		  <row>
			<entry>Copyable</entry>
			<entry>
			  	Values of this extended attribute are automatically filled into the form when copying a object.
			</entry>
		  </row>
		</tbody>
	  </tgroup>
	</table>

</section>

<section id="central:cn-and-ous">
	<title>Structuring of the domain with user-defined LDAP structures</title>
	<para>
		Containers and organizational units (OU) are used to structure the
		data in the LDAP directory. There is no technical difference between
		the two types, just in their application:
	</para>
	<itemizedlist>
		<listitem>
			<simpara>
			Organizational units usually represent real, existing units such
			as a department in a company or an institution
			</simpara>
		</listitem>
		<listitem>
			<simpara>
			Containers are usually used for fictitious units such as all the
			computers within a company
			</simpara>
		</listitem>
	</itemizedlist>
	<para>
		Containers and organizational units are managed in
		the UMC module <guimenu>LDAP directory</guimenu> and are created
		with <guimenu>Add</guimenu> and the object
		types <guimenu>Container: Container</guimenu> and
		<guimenu>Container:	Organisational unit</guimenu>.
	</para>
	<para>
		Containers and OUs can in principle be added at any position in the
		LDAP; however, OUs cannot be created below containers.
	</para>

	<table>
		<title>'General' tab</title>
		<tgroup cols="2">
			<colspec colnum="1" colname="col1" colwidth="1*"/>
			<colspec colnum="2" colname="col2" colwidth="2*"/>
			<thead>
				<row>
					<entry>Attribute</entry>
					<entry>Description</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>Name</entry>
					<entry>
						A random name for the container / organizational unit.
					</entry>
				</row>
				<row>
					<entry>Description</entry>
					<entry>
						A random description for the container / organizational unit.
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>

	<table>
		<title>'Advanced settings' tab</title>
		<tgroup cols="2">
			<colspec colnum="1" colname="col1" colwidth="1*"/>
			<colspec colnum="2" colname="col2" colwidth="2*"/>
			<thead>
				<row>
					<entry>Attribute</entry>
					<entry>Description</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry>Add to standard <replaceable>object type</replaceable> containers</entry>
					<entry>
						If this option is activated, the container or organizational unit will
						be regarded as a standard container for a certain object type. If the
						current container is declared the standard user container, for
						example, this container will also be displayed in users search and
						create masks.
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	<table>
		<title>'Policies' tab</title>
		<tgroup cols="2">
			<colspec colnum="1" colname="col1" colwidth="1*"/>
			<colspec colnum="2" colname="col2" colwidth="2*"/>
			<thead>
				<row>
					<entry>Attribute</entry>
					<entry>Description</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry></entry>
					<entry>
						The tab is described in <xref linkend="central:policies:assign"/>.
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
</section>


<section id="delegated-administration">
  <title>Delegated administration for UMC modules</title>
  <para>
	By default only the members of the <systemitem class="groupname">Domain Admins</systemitem> group can
	access all UMC modules. Policies can be used to configure the access to UMC modules for
	groups or individual users. For example, this can be used to assign a helpdesk team the
	authority to manage printers without giving them complete access to the administration of the
	domain.
  </para>

  <para>
	UMC modules are assigned via a <guimenu>UMC</guimenu> policy which can be assigned to user and
	group objects. The evaluation is performed additively, i.e., general access rights can be
	assigned via ACLs assigned to groups and these rights can be extended via ACLs bound to user
	(see <xref linkend="central:policies"/>).
  </para>

  <para>
	In addition to the assignment of UMC policies, LDAP access rights need to be taken
	into account, as well, for modules that manage data in the LDAP directory.
	All LDAP modifications are applied to the whole UCS domain.
	Therefore by default only members of the <systemitem class="groupname">Domain Admins</systemitem>
	group and some internally used accounts have full access to the UCS LDAP.
	If a module is granted via a UMC policy, the LDAP access must also be allowed
	for the user/group in the LDAP ACLs. Further information on LDAP ACLs can be found in
	Section <xref linkend="domain-ldap:acls"/>.
  </para>

	<table>
	  <title>Policy 'UMC'</title>
	  <tgroup cols="2">
		<colspec colnum="1" colname="col1" colwidth="1*"/>
		<colspec colnum="2" colname="col2" colwidth="2*"/>
		<thead>
		  <row>
			<entry>Attribute</entry>
			<entry>Description</entry>
		  </row>
		</thead>

		<tbody>
		  <row>
			<entry>List of allowed UCS operation sets</entry>
			<entry>
			  All the UMC modules defined here are displayed to the user or group to which this ACL
			  is applied. The names of the domain modules begin with 'UDM'.
			</entry>
		  </row>
		</tbody>

	  </tgroup>
	</table>
  <caution>
    <para>
	  For access to UMC modules, only policies are considered that are assigned to
	  groups or directly to user and computer accounts. Nested
	  group memberships (i.e., groups in groups) are not evaluated.
    </para>
  </caution>
</section>



<section id="central:udm">
	<title>Command line interface of domain management (&ucsUDM;)</title>
	<para>
		The &ucsUDM; is the command line interface alternative to the web-based
		interface of the domain management UMC modules.
		It functions as a powerful tool for the automation of
		administrative procedures in scripts and for the integration in other
		programs.
	</para>
	<para>
		&ucsUDM; can be started with the
		<command>univention-directory-manager</command> command (short form
		<command>udm</command>) as the <systemitem class="username">root</systemitem> user on the &ucsPrimaryDN;.
	</para>
	<para>
		UMC modules and &ucsUDM; use the same domain management modules, i.e.,
		all functions of the web interface are also available in the command
		line interface.
	</para>

	<section id="central:udm:parms">
	  <title>Parameters of the command line interface</title>
	<para>
		A complete list of available modules is displayed if the
		<command>udm</command> is run with the <option>modules</option> parameter:
	</para>
	<screen>
# univention-directory-manager modules
Available Modules are:
  computers/computer
  computers/domaincontroller_backup
  computers/domaincontroller_master
  computers/domaincontroller_slave
 [...]
	</screen>
	<para>
		There are up to five operations for every module:
	</para>
	<itemizedlist>
		<listitem><simpara><option>list</option> lists all existing objects of this type</simpara></listitem>
		<listitem><simpara><option>create</option> creates a new object</simpara></listitem>
		<listitem><simpara><option>modify</option> for the editing of existing objects</simpara></listitem>
		<listitem><simpara><option>remove</option> deletes an object</simpara></listitem>
		<listitem><simpara><option>move</option> is used to move an object to another position in the LDAP directory</simpara></listitem>
	</itemizedlist>
	<para>
		The possible options of a UDM module and the operations which can be
		used on it can be output by specifying the operation name, e.g.,
	</para>
	<screen>
# univention-directory-manager users/user move
[...]
general options:
  --binddn                         bind DN
  --bindpwd                        bind password
  --bindpwdfile                    file containing bind password
[...]
create options:
  --position                       Set position in tree
  --set                            Set variable to value, e.g. foo=bar
[...]
modify options:
  --dn                             Edit object with DN
  --set                            Set variable to value, e.g. foo=bar
[...]
remove options:
  --dn                             Remove object with DN
  --superordinate                  Use superordinate module
[...]
list options:
  --filter                         Lookup filter
  --position                       Search underneath of position in tree
[...]
move options:
  --dn                             Move object with DN
  --position                       Move to position in tree
[...]
	</screen>
	<para>
		The following command outputs further information, the operations and
		the options for every module. This also displays all attributes of the
		module:
	</para>
	<programlisting language="sh">
univention-directory-manager <replaceable>category/modulename</replaceable>
	</programlisting>
	<para>
		With the <option>create</option> operation, the attributes marked with
		<command>(*)</command> must be specified when creating a new object.
	</para>
	<para>
		Some attributes can be assigned more than one value (e.g., mail
		addresses to user objects). These multi-value fields are marked with
		<command>[]</command> behind the attribute name. Some attributes can only be
		set if certain options are set for the object. This is performed for
		the individual attributes by entering the option name:
	</para>
	<screen>
users/user variables:
  General:
    username (*)                             Username
[...]
  Contact:
    e-mail (person,[])                       E-Mail Address
	</screen>
	<para>
		Here, <command>username (*)</command> signifies that this attribute must
		always be set when creating user objects. If the <command>person</command>
		option is set for the user account (this is the standard case), one or
		more e-mail addresses can be added to the contact information.
	</para>
	<para>
		A range of standard parameters are defined for every module:
	</para>
	<itemizedlist>
		<listitem>
			<para>
				The parameter <option>--dn</option> is used to specify the LDAP
				position of the object during modifications or deletion. The
				complete DN must be entered, e.g.,
			</para>
			<programlisting language="sh">
univention-directory-manager users/user remove \
    --dn "uid=ldapadmin,cn=users,dc=company,dc=example"
			</programlisting>
		</listitem>
		<listitem>
			<para>
				The <option>--position</option> parameter is used to specify at
				which LDAP position an object should be created. If no
				<option>--position</option> is entered, the object is created below the
				LDAP base! In the <option>move</option> operation, this parameter specifies
				to which position an object should be moved, e.g:
			</para>
			<programlisting language="sh">
univention-directory-manager computers/ipmanagedclient move \
    --dn "cn=desk01,cn=management,cn=computers,dc=company,dc=com" \
    --position "cn=finance,cn=computers,dc=company,dc=example"
			</programlisting>
		</listitem>
		<listitem>
			<para>
				The <option>--set</option> parameter specifies that the given
				value should be assigned to the following attribute. The parameter
				must be used per attribute value pair, e.g:
			</para>
			<programlisting language="sh">
univention-directory-manager users/user create \
    --position "cn=users,dc=compaby,dc=example" \
    --set username="jsmith" \
    --set firstname="John" \
    --set lastname="Smith" \
    --set password="12345678"
			</programlisting>
		</listitem>
		<listitem>
			<para>
				<option>--option</option> defines the LDAP object classes of an
				object. If, for example, only <classname>pki</classname>
				is provided as options for a user object, it is not possible to
				specify a <property>mailPrimaryAddress</property> for this user as this
				attribute is part of the <classname>mail</classname> option:
			</para>
		</listitem>
		<listitem>
			<simpara>
			<option>--superordinate</option> is used to specify dependent,
			superordinate modules. A DHCP object, for example, requires a DHCP
			service object under which it can be stored. This is transferred
			with the <option>--superordinate</option> option.
			</simpara>
		</listitem>
		<listitem>
			<para>
				The <option>--policy-reference</option> parameter allows the
				assignment of policies to objects (and similarly their deletion with
				<option>--policy-dereference</option>). If a policy is linked to an
				object, the settings from the policy are used for the object, e.g.:
			</para>
			<programlisting language="sh">
univention-directory-manager <replaceable>category/modulename</replaceable> <replaceable>Operation</replaceable> \
    --policy-reference "cn=sales,cn=pwhistory,"\
"cn=users,cn=policies,dc=company,dc=example"
			</programlisting>
		</listitem>
		<listitem>
			<simpara>
			The <option>--ignore_exists</option> parameters skips existing
			objects. If it is not possible to create an object, as it already
			exists, the error code 0 (no error) is still returned.
			</simpara>
		</listitem>
		<listitem>
			<para>
				<option>--append</option> and <option>--remove</option> are used to
				add/remove a value from a multi-value field, e.g.:
			</para>
			<programlisting language="sh">
univention-directory-manager groups/group modify \
    --dn "cn=staff,cn=groups,dc=company,dc=example" \
    --append users="uid=smith,cn=users,dc=company,dc=example" \
    --remove users="uid=miller,cn=users,dc=company,dc=example"
			</programlisting>
		</listitem>
	</itemizedlist>
	</section>

	<section id="central:udm:example">
	  <title>Example invocations of the command line interface</title>
	  <para>
		The following examples for the command line front end of &ucsUDM; can be used as
		templates for your own scripts:
	  </para>

	  <section id="central:udm:example:users">
		<title>Users</title>
		<para>
		  Creating a user in the standard user container:
		</para>
		<programlisting language="sh">
univention-directory-manager users/user create \
    --position "cn=users,dc=example,dc=com" \
    --set username="user01" \
    --set firstname="Random" \
    --set lastname="User" \
    --set organisation="Example company LLC" \
    --set mailPrimaryAddress="mail@example.com" \
    --set password="secretpassword"
</programlisting>

		<para>
		  Subsequent addition of the postal address for an existing user:
		</para>
		<programlisting language="sh">
univention-directory-manager users/user modify \
    --dn "uid=user01,cn=users,dc=example,dc=com" \
    --set street="Exemplary Road 42" \
    --set postcode="28239" \
    --set city="Bremen"
</programlisting>

		<para>
		  This command can be used to display all the users whose user name begins with
		  <emphasis>user</emphasis>:
		</para>
		<programlisting language="sh">
univention-directory-manager users/user list \
    --filter uid=user*
</programlisting>

		<para>
		  Searching for objects with the <option>--filter</option> can also be limited to a
		  position in the LDAP directory; in this case, to all users in the container
		  <uri>cn=bremen,cn=users,dc=example,dc=com</uri>:
		</para>
		<programlisting language="sh">
univention-directory-manager users/user list \
    --filter uid="user*" \
    --position "cn=bremen,cn=users,dc=example,dc=com"
</programlisting>

		<para>
		  This call removes the user <systemitem class="username">user04</systemitem>:
		</para>
		<programlisting language="sh">
univention-directory-manager users/user remove \
    --dn "uid=user04,cn=users,dc=example,dc=com"
</programlisting>

		<para>
		  A company has two sites with containers created for each. The following command can be
		  used to transfer a user from the container for the site "Hamburg" to the container for the
		  site "Bremen":
		</para>
		<programlisting language="sh">
univention-directory-manager users/user move \
    --dn "uid=user03,cn=hamburg,cn=users,dc=example,dc=com" \
    --position "cn=bremen,cn=users,dc=example,dc=com"
</programlisting>
	  </section>

	  <section id="central:udm:example:groups">
		<title>Groups</title>
		<para>
		  Creating a group <systemitem class="groupname">Example Users</systemitem> and adding the user
		  <systemitem class="username">user01</systemitem> to this group:
		</para>
		<programlisting language="sh">
univention-directory-manager groups/group create \
    --position "cn=groups,dc=example,dc=com" \
    --set name="Example Users" \
    --set users="uid=user01,cn=users,dc=example,dc=com"
</programlisting>

		<para>
		  Subsequent addition of the user <systemitem class="username">user02</systemitem> to the existing group:
		</para>
		<programlisting language="sh">
univention-directory-manager groups/group modify \
    --dn "cn=Example Users,cn=groups,dc=example,dc=com" \
    --append users="uid=user02,cn=users,dc=example,dc=com"
</programlisting>

		<caution>
			<para>
		  A <option>--set</option> on the attribute <emphasis>users</emphasis> overwrites the
		  list of group members in contrast to <option>--append</option>.
			</para>
		</caution>

		<para>
			Subsequent removal of the user <systemitem class="username">user01</systemitem> from the group:
		</para>
		<programlisting language="sh">
univention-directory-manager groups/group modify \
    --dn "cn=Example Users,cn=groups,dc=example,dc=com" \
    --remove users="uid=user01,cn=users,dc=example,dc=com"
</programlisting>
	  </section>

	  <section id="central:udm:example:cn-policies">
		<title>Container / Policies</title>
		<para>
		  This call creates a container <uri>cn=Bremen</uri> beneath the standard
		  container <uri>cn=computers</uri> for the computers at the "Bremen" site. The
		  additional option <property>computerPath</property> also registers this container directly
		  as the standard container for computer objects (see <xref linkend="central:cn-and-ous"/>):
		</para>
		<programlisting language="sh">
univention-directory-manager container/cn create \
    --position "cn=computers,dc=example,dc=com" \
    --set name="bremen" \
    --set computerPath=1
</programlisting>

		<para>
		  This command creates a disk quota policy with soft and hard limits and the name <emphasis>Default quota</emphasis>:
		</para>
		<programlisting language="sh">
univention-directory-manager policies/share_userquota create \
    --position "cn=policies,dc=example,dc=com" \
    --set name="Default quota" \
    --set softLimitSpace=5GB \
    --set hardLimitSpace=10GB
</programlisting>

		<para>
		  This policy is now linked to the user container <uri>cn=users</uri>:
		</para>
		<programlisting language="sh">
univention-directory-manager container/cn modify \
    --dn "cn=users,dc=example,dc=com" \
    --policy-reference "cn=Default quota,cn=policies,dc=example,dc=com"
</programlisting>

		<para>
		  Creating a &ucsUCR; policy with which the storage time for log files can be set to one
		  year. One space is used to separate the name and value of the variable:
		</para>
		<programlisting language="sh">
univention-directory-manager policies/registry create \
    --position "cn=config-registry,cn=policies,dc=example,dc=com" \
    --set name="default UCR settings" \
    --set registry="logrotate/rotate/count 52"
</programlisting>

		<para>
		  This command can be used to attach an additional value to the created policy:
		</para>
		<programlisting language="sh">
univention-directory-manager policies/registry modify \
    --dn "cn=default UCR settings,cn=config-registry,"\
"cn=policies,dc=example,dc=com" \
    --append registry='"logrotate/compress" "no"'
</programlisting>
	  </section>

	  <section id="central:udm:example:cn-computers">
		<title>Computers</title>
		<para>
		  In the following example, a Windows client is created. If this client joins the Samba
		  domain at a later point in time (see <xref linkend="windows-domaenenbeitritt"/>), this
		  computer account is then automatically used:
		</para>
		<programlisting language="sh">
univention-directory-manager computers/windows create \
    --position "cn=computers,dc=example,dc=com" \
    --set name=WinClient01 \
    --set mac=aa:bb:cc:aa:bb:cc \
    --set ip=192.0.2.10
</programlisting>
	  </section>

	  <section id="central:udm:example:shares">
		<title>Shares</title>
		<para>
		  The following command creates a share <emphasis>Documentation</emphasis> on the server
		  <systemitem class="server">fileserver.example.com</systemitem>. As long as
		  <filename class="directory">/var/shares/documentation/</filename> does not yet exist on the server, it is
		  also created automatically:
		</para>
		<programlisting language="sh">
univention-directory-manager shares/share create \
    --position "cn=shares,dc=example,dc=com" \
    --set name="Documentation" \
    --set host="fileserver.example.com" \
    --set path="/var/shares/documentation"
</programlisting>
	  </section>

	  <section id="central:udm:example:printer">
		<title>Printers</title>
		<para>
		  Creating a printer share <systemitem class="resource">LaserPrinter01</systemitem> on the print server
		  <systemitem class="server">printserver.example.com</systemitem>. The properties of the printer are specified
		  in the PPD file, the name of which is given relative to the directory
		  <filename class="directory">/usr/share/ppd/</filename>. The connected printer is network-compatible and is
		  connected via the IPP protocol.
		</para>
		<programlisting language="sh">
univention-directory-manager shares/printer create \
    --position "cn=printers,dc=example,dc=com" \
    --set name="LaserPrinter01"  \
    --set spoolHost="printserver.example.com" \
    --set uri="ipp:// 192.0.2.100" \
    --set model="foomatic-rip/HP-Color_LaserJet_9500-Postscript.ppd" \
    --set location="Head office" \
    --set producer="producer: "\
"cn=HP,cn=cups,cn=univention,dc=example,dc=com"
</programlisting>

		<note>
			<para>
		  There must be a blank space between the print protocol and the URL target path in the
		  parameter <parameter class="option">uri</parameter>. A list of the print protocols can be found in <xref
		  linkend="print::shares"/>
			</para>
		</note>

		<para>
		  Printers can be grouped in a printer group for simpler administration. Further information
		  on printer groups can be found in <xref linkend="druckergruppen"/>.
		</para>
		<programlisting language="sh">
univention-directory-manager shares/printergroup create \
    --set name=LaserPrinters \
    --set spoolHost="printserver.example.com" \
    --append groupMember=LaserPrinter01 \
    --append groupMember=LaserPrinter02
</programlisting>
	  </section>

	  <section id="central:udm:example:dnsdhcp">
		<title>DNS/DHCP</title>
		<para>
		  To configure an IP assignment via DHCP, a DHCP computer entry must be registered for the
		  MAC address. Further information on DHCP can be found in <xref
		  linkend="module:dhcp:dhcp"/>.
		</para>
		<programlisting language="sh">
univention-directory-manager dhcp/host create \
    --superordinate "cn=example.com,cn=dhcp,dc=example,dc=com" \
    --set host="Client222" \
    --set fixedaddress="192.0.2.110" \
    --set hwaddress="ethernet 00:11:22:33:44:55"
</programlisting>

		<para>
		  If it should be possible for a computer name to be resolved via DNS, the following
		  commands can be used to configure a forward (host record) and reverse resolution (PTR
		  record).
		</para>
		<programlisting language="sh">
univention-directory-manager dns/host_record create \
    --superordinate "zoneName=example.com,cn=dns,dc=example,dc=com" \
    --set name="Client222" \
    --set a="192.0.2.110"

univention-directory-manager dns/ptr_record create \
    --superordinate "zoneName=0.168.192.in-addr.arpa,cn=dns,"\
"dc=example,dc=com" \
    --set address="110" \
    --set ptr_record="Client222.example.com."
</programlisting>
		<para>
		Further information on DNS can be found in <xref linkend="networks:dns"/>.
		</para>
	  </section>

	  <section id="central:udm:example:extendedattr">
		<title>Extended attributes</title>
		<para>
		  Extended attributes can be used to expand the functional scope of UMC modules,
		  see <xref linkend="central:extendedattrs"/>. In the following example, a new attribute is
		  added, where the car license number of the company car can be saved for each user. The
		  values are managed in the object class <classname>univentionFreeAttributes</classname> created specially for this purpose:
		</para>
		<programlisting language="sh">
univention-directory-manager settings/extended_attribute create \
    --position "cn=custom attributes,cn=univention,dc=example,dc=com" \
    --set name="CarLicense" \
    --set module="users/user" \
    --set ldapMapping="univentionFreeAttribute1" \
    --set objectClass="univentionFreeAttributes" \
    --set longDescription="License plate number of the company car" \
    --set tabName="Company car" \
    --set multivalue=0 \
    --set syntax="string" \
    --set shortDescription="Car license"
</programlisting>
	  </section>
	</section>
</section>

<section id="central:udm_rest_api">
	<title>HTTP API of domain management</title>
	<para>
		UCS provides an HTTP API for UDM which can be used to inspect, modify, create
		and delete UDM objects via HTTP requests.
	</para>
	<para>
		For more information on the API please refer to <xref linkend="developer-reference"/>.
	</para>
</section>

<section id="central:reports">
	<title>Evaluation of data from the LDAP directory with Univention Directory Reports</title>
	<para>
		Univention Directory Reports offers the possibility of creating
		predefined reports for any objects to be managed in the directory
		service.
	</para>
	<para>
		The structure of the reports is defined using templates. The
		specification language developed for this purpose allows the use of
		wildcards, which can be replaced with values from the LDAP
		directory. Any number of report templates can be created. This allows
		users to select very detailed reports or just create simple address
		lists, for example.
	</para>
	<para>
		The creation of the reports is directly integrated in the
		UMC modules <guimenu>Users</guimenu>, <guimenu>Groups</guimenu> and <guimenu>Computers</guimenu>.
		Alternatively, the command line program
		<command>univention-directory-reports</command> can be used.
	</para>
	<para>
		Six report templates are already provided with the delivered
		Univention Directory Reports, which can be used for users, groups and
		computers. Three templates create PDF documents and three CSV files,
		which can be used as an import source for other programs. Further
		templates can be created and registered.
	</para>

	<section id="central:reports:create">
	  <title>Creating reports via &ucsUMC; modules</title>
	  <para>
	    To create a report, you need to open the UMC module <guimenu>Users</guimenu>, <guimenu>Groups</guimenu>
		or <guimenu>Computers</guimenu>. Then
		all the objects which should be covered by the report must be selected (you can select all objects by
		clicking the checkbox the left of <guimenu>Name</guimenu>).
		Clicking on <guimenu>More &ar; Create report</guimenu> allows to choose between the
		<guimenu>Standard Report</guimenu> in PDF format and the <guimenu>Standard CSV
		Report</guimenu> in CSV format.
	  </para>

	  <figure id="umc-report">
		<title>Creating a report</title>
			<graphic width="100%" align="center" fileref="illustrations50/umc_report_en2.png"/>
	  </figure>

	  <para>
		The reports created via a UMC module are stored for 12 hours and then deleted by a cron job. The
		settings for when the cron job should run and how long the reports should be stored for can
		be defined via two &ucsUCR; variables:
	  </para>

	  <itemizedlist>
		<listitem><simpara>
		  <envar>directory/reports/cleanup/cron</envar> Defines when the cron job should be run.
		</simpara></listitem>

		<listitem><simpara>
		  <envar>directory/reports/cleanup/age</envar>Defines the maximum age of a report document
		  in seconds before it is deleted.
		</simpara></listitem>
	  </itemizedlist>
	</section>

	<section id="central-management-umc:Creating_reports_on_the_command_line">
		<title>Creating reports on the command line</title>
		<para>
			Reports can also be created via the command line with the
			<command>univention-directory-reports</command> program. Information on the
			use of the program can be viewed using the <option>--help</option> option.
		</para>
		<para>
			The following command can be used to list the report templates
			available to users, for example:
		</para>
		<programlisting language="sh">
univention-directory-reports -m users/user -l
		</programlisting>
	</section>

	<section id="central-management-umc:Adjustment_expansion_of_Univention_Directory_Reports">
		<title>Adjustment/expansion of Univention Directory Reports</title>
		<para>
			Existing reports can be created directly with the presettings. Some
			presettings can be adapted using &ucsUCR;. For example, it is
			possible to replace the logo that appears in the header of each page
			of a PDF report. To do so, the value of the
			&ucsUCRV; <envar>directory/reports/logo</envar> can include the name of an image
			file. The usual image formats such as JPEG, PNG and GIF can be
			used. The image is automatically adapted to a fixed width of 5.0 cm.
		</para>
		<para>
			In addition to the logo, the contents of the report can also be
			adapted by defining new report templates.
			<!-- These templates are defined -->
			<!-- in a specification language, which is described in detail under WIKIREF-23573 -->
			<!-- in the Univention Wiki. -->
		</para>
	</section>
</section>

<section id="central-management-umc:lets-encrypt">
    <title>Let's Encrypt</title>
    <para>
        Let's Encrypt is a non-profit certificate authority that provides X.509
        certificates for TLS encryption at no charge. It is the world's largest
        certificate authority with the goal of all websites being secure and
        using HTTPS.
    </para>
    <para>
        The Let's Encrypt app in Univention App Center offers a largely
        automated integration of the acme-tiny Let's Encrypt client in UCS. The
        supported services in UCS are the Apache Webserver, the
        Postfix SMTP mailserver and the Dovecot IMAP mailserver.
    </para>
</section>

</chapter>
