.. _chap:translation:

Translating UCS
===============

.. _misc:translation:

UCSUMC translations Translation LocalisationTranslation
=======================================================

By default UCS includes English and German localizations. Univention
provides a set of tools that facilitates the process of creating
translations for UCSUMC.

This section describes all steps necessary to create a working
translation package for UCS. We recommend having a running UCS
installation where the tools can be set up in an easy manner. Further
more a current GIT checkout of the UCS source code is required.

.. _misc:translation:preparation:

Install needed tools
--------------------

The package univention-l10n-dev contains all tools required to setup and
update a translation package. It requires some additional Debian tools
to build the package. Run the following command on your UCS to install
all needed packages.

.. code:: sh

   sudo univention-install univention-l10n-dev dpkg-dev git
                   

.. _misc:translation:checkout:

Obtain a current checkout of the UCS GIT repository
---------------------------------------------------

The GIT repository is later processed to get initial files for a new
translation(often referred to as PO file or Portable Objects).

.. code:: sh

   mkdir ~/translation
   cd ~/translation
   git clone \
       --single-branch --depth 1 --shallow-submodules \
       https://github.com/univention/univention-corporate-server
                   

.. _misc:translation:createpackage:

Create a new translation package
--------------------------------

To create a new translation package for, e.g., French in the current
working directory, the following command must be executed:

.. code:: sh

   cd ~/translation
   univention-ucs-translation-build-package \
       --source ~/translation/univention-corporate-server \
       --languagecode fr \
       --locale fr_FR.UTF-8:UTF-8 \
       --language-name French
                   

This creates a new directory ``~/translation/univention-l10n-fr/`` which
contains a Debian source package of the same name. It includes all
source and target files for the translation.

.. _misc:translation:translate:

Edit translation files
----------------------

The translation source files (``.po`` files) are located below the
directory ``~/translation/univention-l10n-fr/fr``. Each file should be
edited to create the translation.

These files are generated by the package gettext. The manual can be
found at
` <https://www.gnu.org/software/gettext/manual/gettext.html>`__.
Translation files created by gettext consist of a header and various
entries of the form

::

   #: umc/app.js:637
   #, python-format
   msgid "The %s will expire in %d days and should be renewed!"
   msgstr ""
               

The first line provides a hint, were the text is used. The second line
is optional and contains flags, which indicate the type and state of the
translation. The string ``fuzzy`` indicates an entry, which was copied
by gettext from a previous version and needs to be updated.

The line starting with ``msgid`` contains the original text. The
translation has to be placed on the line containing ``msgstr``. Long
texts can be split over multiple lines, were each line must start and
end with a double-quote. The following example from the German
translation shows a text spanning two lines, with the placeholder
present in the original and translated text.

::

   #: umc/js/appcenter/AppCenterPage.js:1067
   #, python-format
   msgid ""
   "If everything else went correct and this is just a temporary network "
   "problem, you should execute %s as root on that backup system."
   msgstr ""
   "Wenn keine weiteren Fehler auftraten und dies nur ein temporäres "
   "Netzwerkproblem ist, sollten Sie %s als root auf dem Backup System ausführen."
               

Some lines contain parameters, in this example ``%s`` and ``%d``. They
are indicated by a flag like ``c-format`` or ``python-format``, which
must not be removed. The placeholders have to be carried over to the
translated string unmodified and in the same order. Some other files
contain placeholders of the form ``%{text}s``, which are more flexible
and can be reordered.

After a file has been translated completely, the line containing
``fuzzy`` at the beginning of the entry should be removed to avoid
warnings. If a translation string consists of multiple lines the
translated string should roughly contain as many lines as the original
string.

.. _misc:translation:updatepackage:

Update the translation package
------------------------------

First update your GIT checkout:

.. code:: sh

   cd ~/translation/univention-corporate-server
   git pull --rebase
               

If changes affecting translations are made in the GIT repository,
existing translation packages need to be updated to reflect those
changes. Given a path to an updated GIT checkout,
``univention-ucs-translation-merge`` can update a previously created
translation source package. The following example will update the
translation package univention-l10n-fr/:

.. code:: sh

   univention-ucs-translation-merge \
       ~/translation/univention-corporate-server \
       ~/translation/univention-l10n-fr
               

.. _misc:translation:buildpackage:

Build the translation package
-----------------------------

Before using the new translation, the Debian package has to be built and
installed. This can be done with the following commands:

.. code:: sh

   cd ~/translation/univention-l10n-fr
   sudo apt-get build-dep .
   dpkg-buildpackage -uc -us -b -rfakeroot
   sudo dpkg -i ../univention-l10n-fr_*.deb
               

After logging out of the UCSUMC the new language should now be
selectable in the UCSUMC login window. Untranslated strings will be
still shown in their original language, i.e. in English.
