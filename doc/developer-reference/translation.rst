{Comments)
How to refer to the univention-l10n-fr package? 
- Translation package   what we use colloquially but not particularly nice.
- Localization package  official name but we don't really provide localization?!
- Language package?     mabe good, mabe not specific enough

.. _chap:translation:

Translating UCS
===============

.. _misc:translation:

UCSUMC translations Translation LocalisationTranslation
=======================================================
{1. Overview, intro}
By default UCS includes English and German localizations.
A french localization is also provided by Univention but not installed by default and not updated as frequently.
You can install it by using the following commands for ucs and ucs@school respectively: 
`univention-install univention-l10n-fr
`univention-install ucs-school-l10n-fr`

To create additional or customized localization packages, please follow the
steps outlined in the "???" section.

{1. Overview, mechanism}
The overwhelming majority of UCS is translated with the GNU gettetxt mechanism.
For more information on gettext, visit https://www.gnu.org/software/gettext/.

The gettext function is aliased to `_` and the translations are located in `.po` files (de.po, fr.po)

{1. Overview, implementation}
Every UCS package includes its german translation and the translation files (de.po files) can be found next to the source code. 
All other localizations are encapsulated within a separate language package which allows building, maintaining and installing them as needed.
Thus you can find the french UCS localization package under `/base/univention-l10n-fr/` and the french ucs@cshool localization package under `/ucs-school-l10n-fr/` within their respective git repositories.
The translation entries, are concatenated into a few translation files (.po files) for each UCS package. 
fr.po files for example are located below `base/univention-l10n-fr/fr`. The directory tree mirrors the one of the source-code but only the translation files are present.

{2. .po files}
.. _misc:translation:translate:


Edit translation files
----------------------

The translation source files (``.po`` files) are located below the
directory ``~/translation/univention-l10n-es/es``. Each file should be
edited to create the translation.

These files are generated by the package gettext. The manual can be
found at
` <https://www.gnu.org/software/gettext/manual/gettext.html>`__.
Translation files created by gettext consist of a header and various
entries of the form

::

   #: umc/app.js:637
   #, python-format
   #, fuzzy
   msgid "The %s will expire in %d days and should be renewed!"
   msgstr ""
               

The first line is a reference to the source code location of the String.
The second line
is optional and contains flags, which indicate the type and state of the
translation. The string ``fuzzy`` indicates an entry, which was copied
by gettext from a previous version and needs to be updated.

The line starting with ``msgid`` contains the original text. The
translation has to be placed on the line containing ``msgstr``. Long
texts can be split over multiple lines, were each line must start and
end with a double-quote. The following example from the German
translation shows a text spanning two lines, with the placeholder
present in the original and translated text.

::

   #: umc/js/appcenter/AppCenterPage.js:1067
   #, python-format
   msgid ""
   "If everything else went correct and this is just a temporary network "
   "problem, you should execute %s as root on that backup system."
   msgstr ""
   "Wenn keine weiteren Fehler auftraten und dies nur ein temporäres "
   "Netzwerkproblem ist, sollten Sie %s als root auf dem Backup System ausführen."
               

Some lines contain parameters, in this example ``%s`` and ``%d``. They
are indicated by a flag like ``c-format`` or ``python-format``, which
must not be removed. The placeholders have to be carried over to the
translated string unmodified and in the same order. Some other files
contain placeholders of the form ``%{text}s``, which are more flexible
and can be reordered.
If a translation string consists of multiple lines the
translated string should roughly contain as many lines as the original
string.

After an entry has been updated successfully, the ``#, fuzzy`` should be removed.
By default, a packagebuild is not possible if entries marked as "fuzzy" are present.
This reminds the translator to check all entries where the english ``msgid`` has changed.
However, new and empty translation entries are not explicitly marked and do not break the build process.
Links for example might not be available in every language and thus the entry can't be translated.

{3. Tools}

To update the german translation files in the current working directory,
you just need to execute the script located at `packaging/univention-l10n/univention-l10n-build`.
It is recommended to commit or stash all other modifications beforehand and start wit a clean working tree.

The univenition-l10n package implements the localization functionality.
Creating and maintaining localization packages is possible with the `univention-l10n-dev` package.
The workflow of creating and maintaining localization packages is outlined below:




.. _misc:translation:preparation:

Install needed tools
--------------------

The package univention-l10n-dev contains all tools required to create and
update a translation package. It requires some additional Debian tools
to build the package. Run the following command on your UCS to install
all needed packages.
You need a running UCS installation to ensure that the tools described below
work as intended

.. code:: sh

   sudo univention-install univention-l10n-dev dpkg-dev git
                   

.. _misc:translation:checkout:

Obtain a current checkout of the UCS GIT repository
---------------------------------------------------

The GIT repository is later processed to get initial files for a new
translation.

.. code:: sh

   mkdir ~/translation
   cd ~/translation
   git clone \
       --single-branch --depth 1 --shallow-submodules \
       https://github.com/univention/univention-corporate-server
                   

.. _misc:translation:createpackage:

Create a translation package
--------------------------------

To create a  translation package, you need to execute
the commands outlined below:

.. code:: sh

   cd ~/translation
   univention-ucs-translation-build-package \
       --source ~/translation/univention-corporate-server \
       --languagecode es \
       --locale es_ES.UTF-8:UTF-8 \
       --language-name Spanish
                   

`univention-ucs-translation-build-package` creates a new directory
``~/translation/univention-l10n-es/``, which contains a Debian source package of the same name.
It includes all source and target files for the translation.
`--source` specifies the UCS git checkout base directory from which a translation will be create.
`--languagecode` `--locale` and `--language-name` specify the settings of the new localization package.

.. _misc:translation:updatepackage:

{2. Build-Tools}

Update the translation package
------------------------------

First update your GIT checkout:

.. code:: sh

   cd ~/translation/univention-corporate-server
   git pull --rebase
               

Over time the translation package becomes outdated as the source code
is modified. 
UCS doesn't break in this case but tew and updated English messages don't have
a translation and are thus displayed in English.

To update the translation, use the `univention-ucs-translation-merge` tool as
described below.
You also need an up-to-date git checkout.

.. code:: sh

   univention-ucs-translation-merge \
       ~/translation/univention-corporate-server \
       ~/translation/univention-l10n-es
               

The first argument again specifies the source-code git checkout
while the second command specifies the already existing and to be updated
translation package source location.
If you want to update the french translation package, you need to
specify `~/translation/univeniton-corporate-server/base/` as the second argument.

.. _misc:translation:buildpackage:

Build the translation package
-----------------------------

Before you can use the new or updated translation, you need to first build and
install the Debian package.

.. code:: sh

   cd ~/translation/univention-l10n-es
   sudo apt build-dep .
   dpkg-buildpackage
   sudo apt install ../univention-l10n-es_*.deb
               

After logging out of the UCSUMC, you can select the new or updated language in
the UCSUMC login window. Strings without a translation are still
displayed in their original language, meaning English.
