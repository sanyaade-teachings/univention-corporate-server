#@%@UCRWARNING=# @%@
@!@
import sys
import glob
sys.path.insert(0, '/usr/share/univention-management-console/saml/')
from sp import CONFIG  # noqa: E402

identity_provider = glob.glob('/usr/share/univention-management-console/saml/idp/*.xml')
service_providers = [CONFIG['entityid']]

servers = ['https://%s/univention/saml/metadata' % server for key, server in configRegistry.items() if key.startswith('umc/saml/trusted/sp/')]
service_providers.extend([server for server in servers if server not in service_providers])

if identity_provider:
	print('saml_grace: %d' % (int(configRegistry.get('umc/saml/grace_time', 600)),))
	print('saml_userid: urn:oid:0.9.2342.19200300.100.1.1')
	for i, idp in enumerate(identity_provider):
		print('saml_idp%d: %s' % (i, idp))
	for i, sp in enumerate(service_providers):
		print('saml_trusted_sp%d: %s' % (i, sp))


# OIDC
import json
with open('/usr/share/univention-management-console/oidc/oidc.json') as fd:
	oidc_config = json.load(fd)
default_op = [oidc_config['oidc_default_op']]

openid_provider = [oidc_config['oidc'][rp]['issuer'] for rp in default_op]
jwks = glob.glob('/usr/share/univention-management-console/oidc/*.jwks')

relying_parties = [server for key, server in configRegistry.items() if key.startswith('umc/oidc/trusted/rp/')]

if openid_provider:
	print('oidc_grace: %d' % (int(configRegistry.get('umc/oidc/grace_time', 600)),))
	# print('oidc_userid: uid')
	for i, jwk in enumerate(jwks):
		print('oidc_trusted_jwks%d: %s' % (i, jwk))
	for i, op in enumerate(openid_provider):
		print('oidc_trusted_iss%d: %s' % (i, op))
	for i, rp in enumerate(relying_parties):
		print('oidc_trusted_rp%d: %s' % (i, rp))
@!@
