#!/bin/bash
#
# Univention Management Console Module Appcenter
#  postinst file for the debian package
#
# Copyright 2013-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

#DEBHELPER#

if [ -z "$2" ]; then
	# new installation. update local files once as there might be
	# meta files already in the cache that did not undergo
	# _update_local_files routine
	# See Bug#46813
	python -c "from univention.appcenter.actions import get_action; get_action('update')()._update_local_files()"
fi

if dpkg --compare-versions "$2" lt 8.0.11-4; then
	systemctl restart univention-directory-listener
fi

if dpkg --compare-versions "$2" lt 8.0.11-46; then
	# Bug #49832
	univention-directory-listener-ctrl resync app_attributes
fi

if dpkg --compare-versions "$2" lt 8.0.11-97; then
	# Bug #49675
	python -c "from univention.appcenter.actions import get_action
import json
query_cache_file = '/var/cache/univention-appcenter/umc-query.json'
list_apps = get_action('list')
domain = get_action('domain')
apps = list_apps.get_apps()
info = domain.to_dict(apps)
with open(query_cache_file, 'wb') as fd:
	json.dump(info, fd)
"
fi

exit 0
