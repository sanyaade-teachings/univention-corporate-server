#!/bin/bash
### BEGIN INIT INFO
# Provides:          univention-docker-container-mode
# Required-Start:    $network $remote_fs
# Required-Stop:     $network $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Univention Docker Container Mode
### END INIT INFO
#
# Copyright (C) 2015-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of this program is made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this program provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use this program under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

eval "$(univention-config-registry shell)"

. /lib/lsb/init-functions
NAME='univention-docker-container-mode'
DESC=$(get_lsb_header_val "$0" Short-Description)

. /usr/share/univention-lib/all.sh

docker_gateway="172.17.42.1"
etcd_base_url="http://$docker_gateway:4001"
etcd_keystore_url="$etcd_base_url/v2/keys"
ucs_domain_rest_directory="ucs/$domainname"

consul_base_url="http://$docker_gateway:8500"
consul_keystore_url="$consul_base_url/v1/kv"

is_etcd_present_on_docker_gateway() {
	curl -s -o /dev/null -L "$etcd_base_url/version"
}

is_consul_present_on_docker_gateway() {
	curl -s -o /dev/null -L "$consul_base_url/v1/health/service/consul"
}

rest_put_key() {
	local rest_directory_url
	rest_directory_url="$1"
	local key
	key="$2"
	local value
	value="$3"

	curl -L -X PUT "$rest_directory_url/$key" -d value="$value"
}

rest_put_domain_info_key() {
	local target_keystore_url
	target_keystore_url="$1"
	local key
	key="$2"
	local value
	value="$3"

	rest_put_key "$target_keystore_url/$ucs_domain_rest_directory" "$key" "$value"
}

rest_get_key() {
	local rest_directory_url
	rest_directory_url="$1"
	local key
	key="$2"

	curl -L "$rest_directory_url/$key" | jq -e -r '.node.value'
}

rest_get_domain_info_key() {
	local target_keystore_url
	target_keystore_url="$1"
	local key
	key="$2"

	rest_get_key "$target_keystore_url/$ucs_domain_rest_directory" "$key"
}

_do_rest_store_master_domain_info() {
	eval "$(univention-config-registry shell \
		ldap/master ldap/backup interfaces/eth0/address)"

	for target_keystore_url in "$@"; do
		rest_put_domain_info_key "$target_keystore_url" "ldap/master" "$ldap_master"
		rest_put_domain_info_key "$target_keystore_url" "ldap/backup" "$ldap_backup"
		rest_put_domain_info_key "$target_keystore_url" "master/interfaces/eth0/address" "$interfaces_eth0_address"
	done
}

rest_store_master_domain_info() {
	eval "$(univention-config-registry shell server/role)"

	## Better check identity locally here
	## before authorizing a destructive operation:
	if [ "$server_role" != "domaincontroller_master" ]; then
		return 2
	fi

	local target_keystore_url_list
	target_keystore_url_list=()
	if is_etcd_present_on_docker_gateway; then
		log_failure_msg "Service etcd found at $etcd_base_url"
		target_keystore_url_list+=("$etcd_keystore_url")
	fi

	if is_consul_present_on_docker_gateway; then
		log_failure_msg "Service consul found at $consul_base_url"
		target_keystore_url_list+=("$consul_keystore_url")
	fi

	if [ ${#target_keystore_url_list[@]} -gt 0 ]; then
		_do_rest_store_master_domain_info "${target_keystore_url_list[@]}"
	fi
}

_do_rest_fetch_domain_info() {
	local target_keystore_url
	local ucrsettings
	local ucr_key
	local value

	target_keystore_url="$1"

	ucrsettings=()
	ucr_key="ldap/master"
	if value=$(rest_get_domain_info_key "$target_keystore_url"
		"$ucr_key"); then
		ucrsettings+=("$ucr_key=$value")
		ldap_master="$value"	## save here for memberserver below
	fi

	ucr_key="ldap/backup"
	if value=$(rest_get_domain_info_key "$target_keystore_url" \
		"$ucr_key"); then
		## This is a single string with space delimited values
		## No funky etcd sorted multivalue POST stuff yet, sorry.
		ucrsettings+=("$ucr_key=$value")
		ldap_backup="$value"	## save here for memberserver below
	fi

	if [ "$server_role" = "memberserver" ]; then
		ucrsettings+=("ldap/server/name=$ldap_master")
		ucrsettings+=("ldap/server/addition=$ldap_backup")

		if value=$(rest_get_domain_info_key "$target_keystore_url" \
			"master/interfaces/eth0/address"); then
			ucrsettings+=("nameserver1=$value")
		fi
	fi

	if [ ${#ucrsettings[@]} -gt 0 ]; then
		univention-config-registry set "${ucrsettings[@]}"
	fi
}

rest_fetch_domain_info() {
	## Only do this on non-master
	eval "$(univention-config-registry shell server/role)"
	if [ "$server_role" = "domaincontroller_master" ]; then
		return 2
	fi

	if is_etcd_present_on_docker_gateway; then
		log_failure_msg "Service etcd found at $etcd_base_url"
		_do_rest_fetch_domain_info "$etcd_keystore_url"
	elif is_consul_present_on_docker_gateway; then
		log_failure_msg "Service consul found at $consul_base_url"
		_do_rest_fetch_domain_info "$consul_keystore_url"
	fi
}

communicate_domain_info_with_external_service_registry() {
	eval "$(univention-config-registry shell server/role)"

	if [ "$server_role" = "domaincontroller_master" ]; then
		rest_store_master_domain_info
	else
		rest_fetch_domain_info
	fi
}

case "$1" in
	start)
		log_action_msg "Starting $DESC"

		## First fetch (or update) domain info like DNS and LDAP server
		communicate_domain_info_with_external_service_registry

		ret=0
		# System must be joined
		if [ -e /var/univention-join/joined ]; then
			if /bin/netcat -q0 -w1 "$ldap_master" 6670 </dev/null && [ -e /usr/sbin/umc-command ]; then
				# Register the IP only if an old IP address was set. The IP and MAC
				# registration is skipped if a Docker App is installed / configured
				#   https://forge.univention.org/bugzilla/show_bug.cgi?id=38437
				old_ip="$(univention-ldapsearch -b "$(ucr get ldap/hostdn)" -s base  -LLL aRecord  | sed -ne 's|^aRecord: ||p')"
				if [ -n "$old_ip" ]; then
					/usr/sbin/univention-register-network-address --force; ret=$?
				fi
			else
				ret=1
			fi
		fi

		# run additional scripts provided by other packages (e.g. univention-mail-postfix)
		run-parts --verbose /etc/univention/docker/init.d

		log_action_end_msg $ret
		;;
	stop|restart|force-reload|status)
		;;
	*)
		echo "Usage: $0 {start|stop|restart|force-reload|status}."
		exit 1
		;;
esac
