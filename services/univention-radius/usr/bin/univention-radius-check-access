#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# Univention RADIUS 802.1X
#  authentication test program
#
# Copyright (C) 2012-2024 Univention GmbH
#
# https://www.univention.de/
#
# All rights reserved.
#
# The source code of the software contained in this package
# as well as the source package itself are made available
# under the terms of the GNU Affero General Public License version 3
# (GNU AGPL V3) as published by the Free Software Foundation.
#
# Binary versions of this package provided by Univention to you as
# well as other copyrighted, protected or trademarked materials like
# Logos, graphics, fonts, specific documentations and configurations,
# cryptographic keys etc. are subject to a license agreement between
# you and Univention and not subject to the GNU AGPL V3.
#
# In the case you use the software under the terms of the GNU AGPL V3,
# the program is provided in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public
# License with the Debian GNU/Linux or Univention distribution in file
# /usr/share/common-licenses/AGPL-3; if not, see
# <https://www.gnu.org/licenses/>.

import optparse
import sys

from univention.radius import get_NetworkAccess
from univention.radius.networkaccess import NetworkAccessError


def main():
	usage = 'Usage: %prog [options]\n\nCheck network access for a user and/or MAC address'
	parser = optparse.OptionParser(usage=usage)
	parser.add_option('--username', dest='username')
	parser.add_option('--station-id', dest='stationId')
	(options, args, ) = parser.parse_args()
	if options.username is None:
		print("no username given")
		return 1
	NetworkAccess = get_NetworkAccess()
	networkAccess = NetworkAccess(options.username, options.stationId, loglevel=4)
	exitCode = 0
	try:
		networkAccess.getNTPasswordHash()
	except NetworkAccessError as exc:
		networkAccess.logger.debug(exc.msg)
		exitCode = 1
		networkAccess.logger.debug('--- Thus access is DENIED.')
	else:
		networkAccess.logger.debug('--- Thus access is ALLOWED.')
	return exitCode


if __name__ == "__main__":
	sys.exit(main())
