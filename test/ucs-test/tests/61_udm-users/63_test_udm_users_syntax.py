#!/usr/share/ucs-test/runner pytest-3 -s -l -vv
## desc: test udm module admin syntax
## versions:
##  5.0-2: fixed
## roles:
##  - domaincontroller_master
##  - domaincontroller_backup
## exposure: safe


import pytest

from univention.admin import syntax as udm_syntax
from univention.admin.handlers.users import user


def test_user_attributes_syntax():
    properties = user.property_descriptions
    assert isinstance(properties.get("username").syntax, udm_syntax.uid_umlauts)
    assert isinstance(properties.get("uidNumber").syntax, udm_syntax.integer)
    assert isinstance(properties.get("gidNumber").syntax, udm_syntax.integer)
    assert isinstance(properties.get("firstname").syntax, udm_syntax.TwoThirdsString)
    assert isinstance(properties.get("lastname").syntax, udm_syntax.string)
    assert isinstance(properties.get("gecos").syntax, udm_syntax.IA5string)
    assert isinstance(properties.get("displayName").syntax, udm_syntax.string)
    assert isinstance(properties.get("title").syntax, udm_syntax.OneThirdString)
    assert isinstance(properties.get("initials").syntax, udm_syntax.string6)
    assert isinstance(properties.get("preferredDeliveryMethod").syntax, udm_syntax.string)
    assert isinstance(properties.get("sambaPrivileges").syntax, udm_syntax.SambaPrivileges)
    assert isinstance(properties.get("description").syntax, udm_syntax.string)
    assert isinstance(properties.get("organisation").syntax, udm_syntax.string64)
    assert isinstance(properties.get("userexpiry").syntax, udm_syntax.date2)
    assert isinstance(properties.get("passwordexpiry").syntax, udm_syntax.date)
    assert isinstance(properties.get("pwdChangeNextLogin").syntax, udm_syntax.boolean)
    assert isinstance(properties.get("preferredLanguage").syntax, udm_syntax.string)
    assert isinstance(properties.get("disabled").syntax, udm_syntax.disabled)
    assert isinstance(properties.get("accountActivationDate").syntax, udm_syntax.ActivationDateTimeTimezone)
    assert isinstance(properties.get("locked").syntax, udm_syntax.locked)
    assert isinstance(properties.get("lockedTime").syntax, udm_syntax.string)
    assert isinstance(properties.get("unlock").syntax, udm_syntax.boolean)
    assert isinstance(properties.get("unlockTime").syntax, udm_syntax.string)
    assert isinstance(properties.get("password").syntax, udm_syntax.userPasswd)
    assert isinstance(properties.get("street").syntax, udm_syntax.string)
    assert isinstance(properties.get("e-mail").syntax, udm_syntax.emailAddress)
    assert isinstance(properties.get("postcode").syntax, udm_syntax.OneThirdString)
    assert isinstance(properties.get("postOfficeBox").syntax, udm_syntax.string)
    assert isinstance(properties.get("city").syntax, udm_syntax.TwoThirdsString)
    assert isinstance(properties.get("country").syntax, udm_syntax.Country)
    assert isinstance(properties.get("phone").syntax, udm_syntax.phone)
    assert isinstance(properties.get("employeeNumber").syntax, udm_syntax.string)
    assert isinstance(properties.get("roomNumber").syntax, udm_syntax.OneThirdString)
    assert isinstance(properties.get("secretary").syntax, udm_syntax.UserDN)
    assert isinstance(properties.get("departmentNumber").syntax, udm_syntax.OneThirdString)
    assert isinstance(properties.get("employeeType").syntax, udm_syntax.string)
    assert isinstance(properties.get("homePostalAddress").syntax, udm_syntax.postalAddress)
    assert isinstance(properties.get("physicalDeliveryOfficeName").syntax, udm_syntax.string)
    assert isinstance(properties.get("homeTelephoneNumber").syntax, udm_syntax.phone)
    assert isinstance(properties.get("mobileTelephoneNumber").syntax, udm_syntax.phone)
    assert isinstance(properties.get("pagerTelephoneNumber").syntax, udm_syntax.phone)
    assert isinstance(properties.get("birthday").syntax, udm_syntax.iso8601Date)
    assert isinstance(properties.get("unixhome").syntax, udm_syntax.absolutePath)
    assert isinstance(properties.get("shell").syntax, udm_syntax.OneThirdString)
    assert isinstance(properties.get("sambahome").syntax, udm_syntax.string)
    assert isinstance(properties.get("scriptpath").syntax, udm_syntax.string)
    assert isinstance(properties.get("profilepath").syntax, udm_syntax.string)
    assert isinstance(properties.get("homedrive").syntax, udm_syntax.string)
    assert isinstance(properties.get("sambaRID").syntax, udm_syntax.integer)
    assert isinstance(properties.get("groups").syntax, udm_syntax.GroupDN)
    assert isinstance(properties.get("primaryGroup").syntax, udm_syntax.GroupDN)
    assert isinstance(properties.get("mailHomeServer").syntax, udm_syntax.MailHomeServer)
    assert isinstance(properties.get("mailPrimaryAddress").syntax, udm_syntax.primaryEmailAddressValidDomain)
    assert isinstance(properties.get("mailAlternativeAddress").syntax, udm_syntax.emailAddressValidDomain)
    assert isinstance(properties.get("mailForwardAddress").syntax, udm_syntax.emailAddress)
    assert isinstance(properties.get("mailForwardCopyToSelf").syntax, udm_syntax.emailForwardSetting)
    assert isinstance(properties.get("overridePWHistory").syntax, udm_syntax.boolean)
    assert isinstance(properties.get("overridePWLength").syntax, udm_syntax.boolean)
    assert isinstance(properties.get("homeShare").syntax, udm_syntax.WritableShare)
    assert isinstance(properties.get("homeSharePath").syntax, udm_syntax.HalfString)
    assert isinstance(properties.get("sambaUserWorkstations").syntax, udm_syntax.string)
    assert isinstance(properties.get("sambaLogonHours").syntax, udm_syntax.SambaLogonHours)
    assert isinstance(properties.get("jpegPhoto").syntax, udm_syntax.jpegPhoto)
    assert isinstance(properties.get("userCertificate").syntax, udm_syntax.Base64Upload)
    assert isinstance(properties.get("certificateIssuerCountry").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerState").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerLocation").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerOrganisation").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerOrganisationalUnit").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerCommonName").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateIssuerMail").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectCountry").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectState").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectLocation").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectOrganisation").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectOrganisationalUnit").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectCommonName").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSubjectMail").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateDateNotBefore").syntax, udm_syntax.date)
    assert isinstance(properties.get("certificateDateNotAfter").syntax, udm_syntax.date)
    assert isinstance(properties.get("certificateVersion").syntax, udm_syntax.string)
    assert isinstance(properties.get("certificateSerial").syntax, udm_syntax.string)
    assert isinstance(properties.get("umcProperty").syntax, udm_syntax.keyAndValue)
    assert isinstance(properties.get("serviceSpecificPassword").syntax, udm_syntax.string)
