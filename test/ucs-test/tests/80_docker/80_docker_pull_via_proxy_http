#!/usr/share/ucs-test/runner python
## desc: Check App installation through proxy
## tags: [docker]
## exposure: dangerous
## packages:
##   - univention-docker
##   - univention-squid

from __future__ import print_function

from univention.testing.ucr import UCSTestConfigRegistry
from univention.config_registry import handler_set
from univention.testing.utils import fail
from dockertest import docker_login, pull_docker_image, docker_image_is_present, get_docker_appbox_image
from dockertest import remove_docker_image, restart_docker


class TestCase:

	def __init__(self):
		self.ucr = UCSTestConfigRegistry()
		self.ucr.load()

		self.imgname = get_docker_appbox_image()

		if not self.ucr.get('proxy/http'):
			handler_set(['proxy/http=http://127.0.0.1:3128'])
			restart_docker()
			self.ucr_changed = True
		else:
			self.ucr_changed = False

	def run(self):
		if docker_image_is_present(self.imgname):
			remove_docker_image(self.imgname)

		docker_login()
		pull_docker_image(self.imgname)
		if not docker_image_is_present(self.imgname):
			fail('The container could not be downloaded.')

	def cleanup(self):
		remove_docker_image(self.imgname)
		if self.ucr_changed:
			self.ucr.revert_to_original_registry()
			restart_docker()

	def __enter__(self):
		return self

	def __exit__(self, exc_type, exc_value, traceback):
		if exc_type:
			print('Cleanup after exception: %s %s' % (exc_type, exc_value))
		self.cleanup()


if __name__ == '__main__':
	with TestCase() as tc:
		tc.run()
